
On_Demand_Traffic_light_Control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000db0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800060  00800060  00000e24  2**0
                  ALLOC
  2 .stab         00001518  00000000  00000000  00000e24  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000070f  00000000  00000000  0000233c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 6c 01 	jmp	0x2d8	; 0x2d8 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 d6 06 	jmp	0xdac	; 0xdac <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#include "..\MCAL\DIO\DIO_Interface.h"

#include "..\MCAL\TIMER\TIMER_Interface.h"

int main (void)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
	TIMER_voidInit(); // initialization for timer
  84:	0e 94 76 00 	call	0xec	; 0xec <TIMER_voidInit>

	DIO_voidSetDirectionPin(DIO_PORTD,PIN0,OUTPUT);   // OUTPUT Direction
  88:	83 e0       	ldi	r24, 0x03	; 3
  8a:	60 e0       	ldi	r22, 0x00	; 0
  8c:	41 e0       	ldi	r20, 0x01	; 1
  8e:	0e 94 99 01 	call	0x332	; 0x332 <DIO_voidSetDirectionPin>

	while (1)
	{
		//AppStart();
			DIO_voidSetvaluePin(DIO_PORTD,PIN0,HIGH);   // LED ON PORTD PIN0
  92:	83 e0       	ldi	r24, 0x03	; 3
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	41 e0       	ldi	r20, 0x01	; 1
  98:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			Timer_voidDelayms(5000);                    // delay 5 sec
  9c:	68 e8       	ldi	r22, 0x88	; 136
  9e:	73 e1       	ldi	r23, 0x13	; 19
  a0:	80 e0       	ldi	r24, 0x00	; 0
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
			DIO_voidSetvaluePin(DIO_PORTD,PIN0,LOW);    // LED OFF PORTD PIN0
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	60 e0       	ldi	r22, 0x00	; 0
  ac:	40 e0       	ldi	r20, 0x00	; 0
  ae:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			Timer_voidDelayms(10000);                   // delay 10 sec
  b2:	60 e1       	ldi	r22, 0x10	; 16
  b4:	77 e2       	ldi	r23, 0x27	; 39
  b6:	80 e0       	ldi	r24, 0x00	; 0
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
			DIO_voidSetvaluePin(DIO_PORTD,PIN0,HIGH);   // LED ON PORTD PIN0
  be:	83 e0       	ldi	r24, 0x03	; 3
  c0:	60 e0       	ldi	r22, 0x00	; 0
  c2:	41 e0       	ldi	r20, 0x01	; 1
  c4:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			Timer_voidDelayms(15000);                   // delay 15 sec
  c8:	68 e9       	ldi	r22, 0x98	; 152
  ca:	7a e3       	ldi	r23, 0x3A	; 58
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
			DIO_voidSetvaluePin(DIO_PORTD,PIN0,LOW);    // LED OFF PORTD PIN0
  d4:	83 e0       	ldi	r24, 0x03	; 3
  d6:	60 e0       	ldi	r22, 0x00	; 0
  d8:	40 e0       	ldi	r20, 0x00	; 0
  da:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			Timer_voidDelayms(20000);                   // delay 20 sec
  de:	60 e2       	ldi	r22, 0x20	; 32
  e0:	7e e4       	ldi	r23, 0x4E	; 78
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
  ea:	d3 cf       	rjmp	.-90     	; 0x92 <main+0x16>

000000ec <TIMER_voidInit>:
#include "TIMER_Registers.h"
#include "TIMER_Interface.h"


void TIMER_voidInit(void)
{
  ec:	df 93       	push	r29
  ee:	cf 93       	push	r28
  f0:	cd b7       	in	r28, 0x3d	; 61
  f2:	de b7       	in	r29, 0x3e	; 62
	/*Select CTC Mode*/
	Set_Bit(TCCR0,TCCR0_WGM01);
  f4:	a3 e5       	ldi	r26, 0x53	; 83
  f6:	b0 e0       	ldi	r27, 0x00	; 0
  f8:	e3 e5       	ldi	r30, 0x53	; 83
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	88 60       	ori	r24, 0x08	; 8
 100:	8c 93       	st	X, r24
	Clear_Bit(TCCR0,TCCR0_WGM00);
 102:	a3 e5       	ldi	r26, 0x53	; 83
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	e3 e5       	ldi	r30, 0x53	; 83
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	8f 7b       	andi	r24, 0xBF	; 191
 10e:	8c 93       	st	X, r24

	/*Select Prescaler CLK/8*/
	TCCR0 &= (0b11111000);
 110:	a3 e5       	ldi	r26, 0x53	; 83
 112:	b0 e0       	ldi	r27, 0x00	; 0
 114:	e3 e5       	ldi	r30, 0x53	; 83
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	88 7f       	andi	r24, 0xF8	; 248
 11c:	8c 93       	st	X, r24
	TCCR0 |= (0b00000010);
 11e:	a3 e5       	ldi	r26, 0x53	; 83
 120:	b0 e0       	ldi	r27, 0x00	; 0
 122:	e3 e5       	ldi	r30, 0x53	; 83
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	80 81       	ld	r24, Z
 128:	82 60       	ori	r24, 0x02	; 2
 12a:	8c 93       	st	X, r24

	/*set Max Value for timer*/
	OCR0 = 200;
 12c:	ec e5       	ldi	r30, 0x5C	; 92
 12e:	f0 e0       	ldi	r31, 0x00	; 0
 130:	88 ec       	ldi	r24, 0xC8	; 200
 132:	80 83       	st	Z, r24

}
 134:	cf 91       	pop	r28
 136:	df 91       	pop	r29
 138:	08 95       	ret

0000013a <Timer_voidDelayms>:

void Timer_voidDelayms (u32 Copy_Delayu32ms)
{
 13a:	df 93       	push	r29
 13c:	cf 93       	push	r28
 13e:	cd b7       	in	r28, 0x3d	; 61
 140:	de b7       	in	r29, 0x3e	; 62
 142:	28 97       	sbiw	r28, 0x08	; 8
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	f8 94       	cli
 148:	de bf       	out	0x3e, r29	; 62
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	cd bf       	out	0x3d, r28	; 61
 14e:	6d 83       	std	Y+5, r22	; 0x05
 150:	7e 83       	std	Y+6, r23	; 0x06
 152:	8f 83       	std	Y+7, r24	; 0x07
 154:	98 87       	std	Y+8, r25	; 0x08
	u32 Local_u32Counter; /*Local variable to counts number of Captures*/

	/*Select CTC Mode*/
	Set_Bit(TCCR0,TCCR0_WGM01);
 156:	a3 e5       	ldi	r26, 0x53	; 83
 158:	b0 e0       	ldi	r27, 0x00	; 0
 15a:	e3 e5       	ldi	r30, 0x53	; 83
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	88 60       	ori	r24, 0x08	; 8
 162:	8c 93       	st	X, r24
	Clear_Bit(TCCR0,TCCR0_WGM00);
 164:	a3 e5       	ldi	r26, 0x53	; 83
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	e3 e5       	ldi	r30, 0x53	; 83
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	8f 7b       	andi	r24, 0xBF	; 191
 170:	8c 93       	st	X, r24

	/*set Max Value for timer*/
	OCR0 = 200;
 172:	ec e5       	ldi	r30, 0x5C	; 92
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	88 ec       	ldi	r24, 0xC8	; 200
 178:	80 83       	st	Z, r24

	/*Clear flag*/
	Set_Bit(TIFR,TIFR_OCF0);
 17a:	a8 e5       	ldi	r26, 0x58	; 88
 17c:	b0 e0       	ldi	r27, 0x00	; 0
 17e:	e8 e5       	ldi	r30, 0x58	; 88
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	82 60       	ori	r24, 0x02	; 2
 186:	8c 93       	st	X, r24

	/*Select Prescaler CLK/8*/
	TCCR0 &= (0b11111000);
 188:	a3 e5       	ldi	r26, 0x53	; 83
 18a:	b0 e0       	ldi	r27, 0x00	; 0
 18c:	e3 e5       	ldi	r30, 0x53	; 83
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	88 7f       	andi	r24, 0xF8	; 248
 194:	8c 93       	st	X, r24
	TCCR0 |= (0b00000010);
 196:	a3 e5       	ldi	r26, 0x53	; 83
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	e3 e5       	ldi	r30, 0x53	; 83
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	82 60       	ori	r24, 0x02	; 2
 1a2:	8c 93       	st	X, r24

	for (Local_u32Counter=1;Local_u32Counter<=5*Copy_Delayu32ms;Local_u32Counter++)
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	a0 e0       	ldi	r26, 0x00	; 0
 1aa:	b0 e0       	ldi	r27, 0x00	; 0
 1ac:	89 83       	std	Y+1, r24	; 0x01
 1ae:	9a 83       	std	Y+2, r25	; 0x02
 1b0:	ab 83       	std	Y+3, r26	; 0x03
 1b2:	bc 83       	std	Y+4, r27	; 0x04
 1b4:	1c c0       	rjmp	.+56     	; 0x1ee <Timer_voidDelayms+0xb4>
	{
		while (Get_Bit(TIFR,TIFR_OCF0)!=1); /*Polling for the flag*/
 1b6:	e8 e5       	ldi	r30, 0x58	; 88
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	86 95       	lsr	r24
 1be:	88 2f       	mov	r24, r24
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	81 70       	andi	r24, 0x01	; 1
 1c4:	90 70       	andi	r25, 0x00	; 0
 1c6:	00 97       	sbiw	r24, 0x00	; 0
 1c8:	b1 f3       	breq	.-20     	; 0x1b6 <Timer_voidDelayms+0x7c>
		Set_Bit(TIFR,TIFR_OCF0);            /*Clear flag*/
 1ca:	a8 e5       	ldi	r26, 0x58	; 88
 1cc:	b0 e0       	ldi	r27, 0x00	; 0
 1ce:	e8 e5       	ldi	r30, 0x58	; 88
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	80 81       	ld	r24, Z
 1d4:	82 60       	ori	r24, 0x02	; 2
 1d6:	8c 93       	st	X, r24

	/*Select Prescaler CLK/8*/
	TCCR0 &= (0b11111000);
	TCCR0 |= (0b00000010);

	for (Local_u32Counter=1;Local_u32Counter<=5*Copy_Delayu32ms;Local_u32Counter++)
 1d8:	89 81       	ldd	r24, Y+1	; 0x01
 1da:	9a 81       	ldd	r25, Y+2	; 0x02
 1dc:	ab 81       	ldd	r26, Y+3	; 0x03
 1de:	bc 81       	ldd	r27, Y+4	; 0x04
 1e0:	01 96       	adiw	r24, 0x01	; 1
 1e2:	a1 1d       	adc	r26, r1
 1e4:	b1 1d       	adc	r27, r1
 1e6:	89 83       	std	Y+1, r24	; 0x01
 1e8:	9a 83       	std	Y+2, r25	; 0x02
 1ea:	ab 83       	std	Y+3, r26	; 0x03
 1ec:	bc 83       	std	Y+4, r27	; 0x04
 1ee:	2d 81       	ldd	r18, Y+5	; 0x05
 1f0:	3e 81       	ldd	r19, Y+6	; 0x06
 1f2:	4f 81       	ldd	r20, Y+7	; 0x07
 1f4:	58 85       	ldd	r21, Y+8	; 0x08
 1f6:	da 01       	movw	r26, r20
 1f8:	c9 01       	movw	r24, r18
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	aa 1f       	adc	r26, r26
 200:	bb 1f       	adc	r27, r27
 202:	88 0f       	add	r24, r24
 204:	99 1f       	adc	r25, r25
 206:	aa 1f       	adc	r26, r26
 208:	bb 1f       	adc	r27, r27
 20a:	28 0f       	add	r18, r24
 20c:	39 1f       	adc	r19, r25
 20e:	4a 1f       	adc	r20, r26
 210:	5b 1f       	adc	r21, r27
 212:	89 81       	ldd	r24, Y+1	; 0x01
 214:	9a 81       	ldd	r25, Y+2	; 0x02
 216:	ab 81       	ldd	r26, Y+3	; 0x03
 218:	bc 81       	ldd	r27, Y+4	; 0x04
 21a:	28 17       	cp	r18, r24
 21c:	39 07       	cpc	r19, r25
 21e:	4a 07       	cpc	r20, r26
 220:	5b 07       	cpc	r21, r27
 222:	48 f6       	brcc	.-110    	; 0x1b6 <Timer_voidDelayms+0x7c>
	{
		while (Get_Bit(TIFR,TIFR_OCF0)!=1); /*Polling for the flag*/
		Set_Bit(TIFR,TIFR_OCF0);            /*Clear flag*/
	}
}
 224:	28 96       	adiw	r28, 0x08	; 8
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	f8 94       	cli
 22a:	de bf       	out	0x3e, r29	; 62
 22c:	0f be       	out	0x3f, r0	; 63
 22e:	cd bf       	out	0x3d, r28	; 61
 230:	cf 91       	pop	r28
 232:	df 91       	pop	r29
 234:	08 95       	ret

00000236 <INT_voidGlobalInterrupt>:


void (*INT0_CallBack)(void)=NULL;

void INT_voidGlobalInterrupt()
{
 236:	df 93       	push	r29
 238:	cf 93       	push	r28
 23a:	cd b7       	in	r28, 0x3d	; 61
 23c:	de b7       	in	r29, 0x3e	; 62
	/*Set in bit 7 in status register one to enable global interrupt*/
	Set_Bit(SREG,SREG_I);
 23e:	af e5       	ldi	r26, 0x5F	; 95
 240:	b0 e0       	ldi	r27, 0x00	; 0
 242:	ef e5       	ldi	r30, 0x5F	; 95
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	80 81       	ld	r24, Z
 248:	80 68       	ori	r24, 0x80	; 128
 24a:	8c 93       	st	X, r24
}
 24c:	cf 91       	pop	r28
 24e:	df 91       	pop	r29
 250:	08 95       	ret

00000252 <INT0_voidInit>:

void INT0_voidInit()
{
 252:	df 93       	push	r29
 254:	cf 93       	push	r28
 256:	cd b7       	in	r28, 0x3d	; 61
 258:	de b7       	in	r29, 0x3e	; 62
	/*interrupt on Falling Edge (Interrupt Request)*/
	Clear_Bit(MCUCR,MCUCR_ISC00);
 25a:	a5 e5       	ldi	r26, 0x55	; 85
 25c:	b0 e0       	ldi	r27, 0x00	; 0
 25e:	e5 e5       	ldi	r30, 0x55	; 85
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	80 81       	ld	r24, Z
 264:	8e 7f       	andi	r24, 0xFE	; 254
 266:	8c 93       	st	X, r24
	Set_Bit(MCUCR,MCUCR_ISC01);
 268:	a5 e5       	ldi	r26, 0x55	; 85
 26a:	b0 e0       	ldi	r27, 0x00	; 0
 26c:	e5 e5       	ldi	r30, 0x55	; 85
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	80 81       	ld	r24, Z
 272:	82 60       	ori	r24, 0x02	; 2
 274:	8c 93       	st	X, r24

}
 276:	cf 91       	pop	r28
 278:	df 91       	pop	r29
 27a:	08 95       	ret

0000027c <INT0_voidEnable>:

void INT0_voidEnable()
{
 27c:	df 93       	push	r29
 27e:	cf 93       	push	r28
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
	/*INT0 Enable*/
	Set_Bit(GICR,GICR_INT0);
 284:	ab e5       	ldi	r26, 0x5B	; 91
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	eb e5       	ldi	r30, 0x5B	; 91
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	80 64       	ori	r24, 0x40	; 64
 290:	8c 93       	st	X, r24
}
 292:	cf 91       	pop	r28
 294:	df 91       	pop	r29
 296:	08 95       	ret

00000298 <INT0_voidDisable>:

void INT0_voidDisable()
{
 298:	df 93       	push	r29
 29a:	cf 93       	push	r28
 29c:	cd b7       	in	r28, 0x3d	; 61
 29e:	de b7       	in	r29, 0x3e	; 62
	/*INT0 Disable*/
	Clear_Bit(GICR,GICR_INT0);
 2a0:	ab e5       	ldi	r26, 0x5B	; 91
 2a2:	b0 e0       	ldi	r27, 0x00	; 0
 2a4:	eb e5       	ldi	r30, 0x5B	; 91
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	8f 7b       	andi	r24, 0xBF	; 191
 2ac:	8c 93       	st	X, r24
}
 2ae:	cf 91       	pop	r28
 2b0:	df 91       	pop	r29
 2b2:	08 95       	ret

000002b4 <INT0_voidCallBack>:

void INT0_voidCallBack(void (*Local_voidINT0)(void))
{
 2b4:	df 93       	push	r29
 2b6:	cf 93       	push	r28
 2b8:	00 d0       	rcall	.+0      	; 0x2ba <INT0_voidCallBack+0x6>
 2ba:	cd b7       	in	r28, 0x3d	; 61
 2bc:	de b7       	in	r29, 0x3e	; 62
 2be:	9a 83       	std	Y+2, r25	; 0x02
 2c0:	89 83       	std	Y+1, r24	; 0x01
	INT0_CallBack= Local_voidINT0;
 2c2:	89 81       	ldd	r24, Y+1	; 0x01
 2c4:	9a 81       	ldd	r25, Y+2	; 0x02
 2c6:	90 93 61 00 	sts	0x0061, r25
 2ca:	80 93 60 00 	sts	0x0060, r24
}
 2ce:	0f 90       	pop	r0
 2d0:	0f 90       	pop	r0
 2d2:	cf 91       	pop	r28
 2d4:	df 91       	pop	r29
 2d6:	08 95       	ret

000002d8 <__vector_1>:

void __vector_1(void)__attribute__((signal));
void __vector_1(void)
{
 2d8:	1f 92       	push	r1
 2da:	0f 92       	push	r0
 2dc:	0f b6       	in	r0, 0x3f	; 63
 2de:	0f 92       	push	r0
 2e0:	11 24       	eor	r1, r1
 2e2:	2f 93       	push	r18
 2e4:	3f 93       	push	r19
 2e6:	4f 93       	push	r20
 2e8:	5f 93       	push	r21
 2ea:	6f 93       	push	r22
 2ec:	7f 93       	push	r23
 2ee:	8f 93       	push	r24
 2f0:	9f 93       	push	r25
 2f2:	af 93       	push	r26
 2f4:	bf 93       	push	r27
 2f6:	ef 93       	push	r30
 2f8:	ff 93       	push	r31
 2fa:	df 93       	push	r29
 2fc:	cf 93       	push	r28
 2fe:	cd b7       	in	r28, 0x3d	; 61
 300:	de b7       	in	r29, 0x3e	; 62
	INT0_CallBack();
 302:	e0 91 60 00 	lds	r30, 0x0060
 306:	f0 91 61 00 	lds	r31, 0x0061
 30a:	09 95       	icall
}
 30c:	cf 91       	pop	r28
 30e:	df 91       	pop	r29
 310:	ff 91       	pop	r31
 312:	ef 91       	pop	r30
 314:	bf 91       	pop	r27
 316:	af 91       	pop	r26
 318:	9f 91       	pop	r25
 31a:	8f 91       	pop	r24
 31c:	7f 91       	pop	r23
 31e:	6f 91       	pop	r22
 320:	5f 91       	pop	r21
 322:	4f 91       	pop	r20
 324:	3f 91       	pop	r19
 326:	2f 91       	pop	r18
 328:	0f 90       	pop	r0
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	0f 90       	pop	r0
 32e:	1f 90       	pop	r1
 330:	18 95       	reti

00000332 <DIO_voidSetDirectionPin>:
#include "DIO_Registers.h"
#include "DIO_CONFIG.h"
#include "DIO_Interface.h"

void DIO_voidSetDirectionPin(u8 Copy_u8PORT , u8 Copy_u8Pin , u8 Copy_u8Direction)
{
 332:	df 93       	push	r29
 334:	cf 93       	push	r28
 336:	cd b7       	in	r28, 0x3d	; 61
 338:	de b7       	in	r29, 0x3e	; 62
 33a:	27 97       	sbiw	r28, 0x07	; 7
 33c:	0f b6       	in	r0, 0x3f	; 63
 33e:	f8 94       	cli
 340:	de bf       	out	0x3e, r29	; 62
 342:	0f be       	out	0x3f, r0	; 63
 344:	cd bf       	out	0x3d, r28	; 61
 346:	89 83       	std	Y+1, r24	; 0x01
 348:	6a 83       	std	Y+2, r22	; 0x02
 34a:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Direction == OUTPUT)
 34c:	8b 81       	ldd	r24, Y+3	; 0x03
 34e:	81 30       	cpi	r24, 0x01	; 1
 350:	09 f0       	breq	.+2      	; 0x354 <DIO_voidSetDirectionPin+0x22>
 352:	6f c0       	rjmp	.+222    	; 0x432 <DIO_voidSetDirectionPin+0x100>
	{
		switch (Copy_u8PORT)
 354:	89 81       	ldd	r24, Y+1	; 0x01
 356:	28 2f       	mov	r18, r24
 358:	30 e0       	ldi	r19, 0x00	; 0
 35a:	3f 83       	std	Y+7, r19	; 0x07
 35c:	2e 83       	std	Y+6, r18	; 0x06
 35e:	8e 81       	ldd	r24, Y+6	; 0x06
 360:	9f 81       	ldd	r25, Y+7	; 0x07
 362:	81 30       	cpi	r24, 0x01	; 1
 364:	91 05       	cpc	r25, r1
 366:	49 f1       	breq	.+82     	; 0x3ba <DIO_voidSetDirectionPin+0x88>
 368:	2e 81       	ldd	r18, Y+6	; 0x06
 36a:	3f 81       	ldd	r19, Y+7	; 0x07
 36c:	22 30       	cpi	r18, 0x02	; 2
 36e:	31 05       	cpc	r19, r1
 370:	2c f4       	brge	.+10     	; 0x37c <DIO_voidSetDirectionPin+0x4a>
 372:	8e 81       	ldd	r24, Y+6	; 0x06
 374:	9f 81       	ldd	r25, Y+7	; 0x07
 376:	00 97       	sbiw	r24, 0x00	; 0
 378:	61 f0       	breq	.+24     	; 0x392 <DIO_voidSetDirectionPin+0x60>
 37a:	d2 c0       	rjmp	.+420    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
 37c:	2e 81       	ldd	r18, Y+6	; 0x06
 37e:	3f 81       	ldd	r19, Y+7	; 0x07
 380:	22 30       	cpi	r18, 0x02	; 2
 382:	31 05       	cpc	r19, r1
 384:	71 f1       	breq	.+92     	; 0x3e2 <DIO_voidSetDirectionPin+0xb0>
 386:	8e 81       	ldd	r24, Y+6	; 0x06
 388:	9f 81       	ldd	r25, Y+7	; 0x07
 38a:	83 30       	cpi	r24, 0x03	; 3
 38c:	91 05       	cpc	r25, r1
 38e:	e9 f1       	breq	.+122    	; 0x40a <DIO_voidSetDirectionPin+0xd8>
 390:	c7 c0       	rjmp	.+398    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
		{
		case DIO_PORTA:
			Set_Bit(DDRA,Copy_u8Pin);
 392:	aa e3       	ldi	r26, 0x3A	; 58
 394:	b0 e0       	ldi	r27, 0x00	; 0
 396:	ea e3       	ldi	r30, 0x3A	; 58
 398:	f0 e0       	ldi	r31, 0x00	; 0
 39a:	80 81       	ld	r24, Z
 39c:	48 2f       	mov	r20, r24
 39e:	8a 81       	ldd	r24, Y+2	; 0x02
 3a0:	28 2f       	mov	r18, r24
 3a2:	30 e0       	ldi	r19, 0x00	; 0
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	02 2e       	mov	r0, r18
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <DIO_voidSetDirectionPin+0x7e>
 3ac:	88 0f       	add	r24, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	0a 94       	dec	r0
 3b2:	e2 f7       	brpl	.-8      	; 0x3ac <DIO_voidSetDirectionPin+0x7a>
 3b4:	84 2b       	or	r24, r20
 3b6:	8c 93       	st	X, r24
 3b8:	b3 c0       	rjmp	.+358    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
			break;

		case DIO_PORTB:
			Set_Bit(DDRB,Copy_u8Pin);
 3ba:	a7 e3       	ldi	r26, 0x37	; 55
 3bc:	b0 e0       	ldi	r27, 0x00	; 0
 3be:	e7 e3       	ldi	r30, 0x37	; 55
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
 3c2:	80 81       	ld	r24, Z
 3c4:	48 2f       	mov	r20, r24
 3c6:	8a 81       	ldd	r24, Y+2	; 0x02
 3c8:	28 2f       	mov	r18, r24
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	81 e0       	ldi	r24, 0x01	; 1
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	02 2e       	mov	r0, r18
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <DIO_voidSetDirectionPin+0xa6>
 3d4:	88 0f       	add	r24, r24
 3d6:	99 1f       	adc	r25, r25
 3d8:	0a 94       	dec	r0
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <DIO_voidSetDirectionPin+0xa2>
 3dc:	84 2b       	or	r24, r20
 3de:	8c 93       	st	X, r24
 3e0:	9f c0       	rjmp	.+318    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
			break;

		case DIO_PORTC:
			Set_Bit(DDRC,Copy_u8Pin);
 3e2:	a4 e3       	ldi	r26, 0x34	; 52
 3e4:	b0 e0       	ldi	r27, 0x00	; 0
 3e6:	e4 e3       	ldi	r30, 0x34	; 52
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	80 81       	ld	r24, Z
 3ec:	48 2f       	mov	r20, r24
 3ee:	8a 81       	ldd	r24, Y+2	; 0x02
 3f0:	28 2f       	mov	r18, r24
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	02 2e       	mov	r0, r18
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <DIO_voidSetDirectionPin+0xce>
 3fc:	88 0f       	add	r24, r24
 3fe:	99 1f       	adc	r25, r25
 400:	0a 94       	dec	r0
 402:	e2 f7       	brpl	.-8      	; 0x3fc <DIO_voidSetDirectionPin+0xca>
 404:	84 2b       	or	r24, r20
 406:	8c 93       	st	X, r24
 408:	8b c0       	rjmp	.+278    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
			break;

		case DIO_PORTD:
			Set_Bit(DDRD,Copy_u8Pin);
 40a:	a1 e3       	ldi	r26, 0x31	; 49
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	e1 e3       	ldi	r30, 0x31	; 49
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	80 81       	ld	r24, Z
 414:	48 2f       	mov	r20, r24
 416:	8a 81       	ldd	r24, Y+2	; 0x02
 418:	28 2f       	mov	r18, r24
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	02 2e       	mov	r0, r18
 422:	02 c0       	rjmp	.+4      	; 0x428 <DIO_voidSetDirectionPin+0xf6>
 424:	88 0f       	add	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	0a 94       	dec	r0
 42a:	e2 f7       	brpl	.-8      	; 0x424 <DIO_voidSetDirectionPin+0xf2>
 42c:	84 2b       	or	r24, r20
 42e:	8c 93       	st	X, r24
 430:	77 c0       	rjmp	.+238    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>

		default:
			break;
		}
	}
		else if (Copy_u8Direction == INPUT)
 432:	8b 81       	ldd	r24, Y+3	; 0x03
 434:	88 23       	and	r24, r24
 436:	09 f0       	breq	.+2      	; 0x43a <DIO_voidSetDirectionPin+0x108>
 438:	73 c0       	rjmp	.+230    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
		{
			switch (Copy_u8PORT)
 43a:	89 81       	ldd	r24, Y+1	; 0x01
 43c:	28 2f       	mov	r18, r24
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	3d 83       	std	Y+5, r19	; 0x05
 442:	2c 83       	std	Y+4, r18	; 0x04
 444:	8c 81       	ldd	r24, Y+4	; 0x04
 446:	9d 81       	ldd	r25, Y+5	; 0x05
 448:	81 30       	cpi	r24, 0x01	; 1
 44a:	91 05       	cpc	r25, r1
 44c:	59 f1       	breq	.+86     	; 0x4a4 <DIO_voidSetDirectionPin+0x172>
 44e:	2c 81       	ldd	r18, Y+4	; 0x04
 450:	3d 81       	ldd	r19, Y+5	; 0x05
 452:	22 30       	cpi	r18, 0x02	; 2
 454:	31 05       	cpc	r19, r1
 456:	2c f4       	brge	.+10     	; 0x462 <DIO_voidSetDirectionPin+0x130>
 458:	8c 81       	ldd	r24, Y+4	; 0x04
 45a:	9d 81       	ldd	r25, Y+5	; 0x05
 45c:	00 97       	sbiw	r24, 0x00	; 0
 45e:	69 f0       	breq	.+26     	; 0x47a <DIO_voidSetDirectionPin+0x148>
 460:	5f c0       	rjmp	.+190    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
 462:	2c 81       	ldd	r18, Y+4	; 0x04
 464:	3d 81       	ldd	r19, Y+5	; 0x05
 466:	22 30       	cpi	r18, 0x02	; 2
 468:	31 05       	cpc	r19, r1
 46a:	89 f1       	breq	.+98     	; 0x4ce <DIO_voidSetDirectionPin+0x19c>
 46c:	8c 81       	ldd	r24, Y+4	; 0x04
 46e:	9d 81       	ldd	r25, Y+5	; 0x05
 470:	83 30       	cpi	r24, 0x03	; 3
 472:	91 05       	cpc	r25, r1
 474:	09 f4       	brne	.+2      	; 0x478 <DIO_voidSetDirectionPin+0x146>
 476:	40 c0       	rjmp	.+128    	; 0x4f8 <DIO_voidSetDirectionPin+0x1c6>
 478:	53 c0       	rjmp	.+166    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
			{
			case DIO_PORTA:
				Clear_Bit(DDRA,Copy_u8Pin);
 47a:	aa e3       	ldi	r26, 0x3A	; 58
 47c:	b0 e0       	ldi	r27, 0x00	; 0
 47e:	ea e3       	ldi	r30, 0x3A	; 58
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	80 81       	ld	r24, Z
 484:	48 2f       	mov	r20, r24
 486:	8a 81       	ldd	r24, Y+2	; 0x02
 488:	28 2f       	mov	r18, r24
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	02 2e       	mov	r0, r18
 492:	02 c0       	rjmp	.+4      	; 0x498 <DIO_voidSetDirectionPin+0x166>
 494:	88 0f       	add	r24, r24
 496:	99 1f       	adc	r25, r25
 498:	0a 94       	dec	r0
 49a:	e2 f7       	brpl	.-8      	; 0x494 <DIO_voidSetDirectionPin+0x162>
 49c:	80 95       	com	r24
 49e:	84 23       	and	r24, r20
 4a0:	8c 93       	st	X, r24
 4a2:	3e c0       	rjmp	.+124    	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
				break;

			case DIO_PORTB:
				Clear_Bit(DDRB,Copy_u8Pin);
 4a4:	a7 e3       	ldi	r26, 0x37	; 55
 4a6:	b0 e0       	ldi	r27, 0x00	; 0
 4a8:	e7 e3       	ldi	r30, 0x37	; 55
 4aa:	f0 e0       	ldi	r31, 0x00	; 0
 4ac:	80 81       	ld	r24, Z
 4ae:	48 2f       	mov	r20, r24
 4b0:	8a 81       	ldd	r24, Y+2	; 0x02
 4b2:	28 2f       	mov	r18, r24
 4b4:	30 e0       	ldi	r19, 0x00	; 0
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	90 e0       	ldi	r25, 0x00	; 0
 4ba:	02 2e       	mov	r0, r18
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <DIO_voidSetDirectionPin+0x190>
 4be:	88 0f       	add	r24, r24
 4c0:	99 1f       	adc	r25, r25
 4c2:	0a 94       	dec	r0
 4c4:	e2 f7       	brpl	.-8      	; 0x4be <DIO_voidSetDirectionPin+0x18c>
 4c6:	80 95       	com	r24
 4c8:	84 23       	and	r24, r20
 4ca:	8c 93       	st	X, r24
 4cc:	29 c0       	rjmp	.+82     	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
				break;

			case DIO_PORTC:
				Clear_Bit(DDRC,Copy_u8Pin);
 4ce:	a4 e3       	ldi	r26, 0x34	; 52
 4d0:	b0 e0       	ldi	r27, 0x00	; 0
 4d2:	e4 e3       	ldi	r30, 0x34	; 52
 4d4:	f0 e0       	ldi	r31, 0x00	; 0
 4d6:	80 81       	ld	r24, Z
 4d8:	48 2f       	mov	r20, r24
 4da:	8a 81       	ldd	r24, Y+2	; 0x02
 4dc:	28 2f       	mov	r18, r24
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	81 e0       	ldi	r24, 0x01	; 1
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	02 2e       	mov	r0, r18
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <DIO_voidSetDirectionPin+0x1ba>
 4e8:	88 0f       	add	r24, r24
 4ea:	99 1f       	adc	r25, r25
 4ec:	0a 94       	dec	r0
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <DIO_voidSetDirectionPin+0x1b6>
 4f0:	80 95       	com	r24
 4f2:	84 23       	and	r24, r20
 4f4:	8c 93       	st	X, r24
 4f6:	14 c0       	rjmp	.+40     	; 0x520 <DIO_voidSetDirectionPin+0x1ee>
				break;

			case DIO_PORTD:
				Clear_Bit(DDRD,Copy_u8Pin);
 4f8:	a1 e3       	ldi	r26, 0x31	; 49
 4fa:	b0 e0       	ldi	r27, 0x00	; 0
 4fc:	e1 e3       	ldi	r30, 0x31	; 49
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	80 81       	ld	r24, Z
 502:	48 2f       	mov	r20, r24
 504:	8a 81       	ldd	r24, Y+2	; 0x02
 506:	28 2f       	mov	r18, r24
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	02 2e       	mov	r0, r18
 510:	02 c0       	rjmp	.+4      	; 0x516 <DIO_voidSetDirectionPin+0x1e4>
 512:	88 0f       	add	r24, r24
 514:	99 1f       	adc	r25, r25
 516:	0a 94       	dec	r0
 518:	e2 f7       	brpl	.-8      	; 0x512 <DIO_voidSetDirectionPin+0x1e0>
 51a:	80 95       	com	r24
 51c:	84 23       	and	r24, r20
 51e:	8c 93       	st	X, r24

			default:
				break;
			 }
		}
}
 520:	27 96       	adiw	r28, 0x07	; 7
 522:	0f b6       	in	r0, 0x3f	; 63
 524:	f8 94       	cli
 526:	de bf       	out	0x3e, r29	; 62
 528:	0f be       	out	0x3f, r0	; 63
 52a:	cd bf       	out	0x3d, r28	; 61
 52c:	cf 91       	pop	r28
 52e:	df 91       	pop	r29
 530:	08 95       	ret

00000532 <DIO_voidSetvaluePin>:

void DIO_voidSetvaluePin(u8 Copy_u8PORT , u8 Copy_u8Pin, u8 Copy_u8Value)
{
 532:	df 93       	push	r29
 534:	cf 93       	push	r28
 536:	cd b7       	in	r28, 0x3d	; 61
 538:	de b7       	in	r29, 0x3e	; 62
 53a:	27 97       	sbiw	r28, 0x07	; 7
 53c:	0f b6       	in	r0, 0x3f	; 63
 53e:	f8 94       	cli
 540:	de bf       	out	0x3e, r29	; 62
 542:	0f be       	out	0x3f, r0	; 63
 544:	cd bf       	out	0x3d, r28	; 61
 546:	89 83       	std	Y+1, r24	; 0x01
 548:	6a 83       	std	Y+2, r22	; 0x02
 54a:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Value == HIGH)
 54c:	8b 81       	ldd	r24, Y+3	; 0x03
 54e:	81 30       	cpi	r24, 0x01	; 1
 550:	09 f0       	breq	.+2      	; 0x554 <DIO_voidSetvaluePin+0x22>
 552:	6f c0       	rjmp	.+222    	; 0x632 <DIO_voidSetvaluePin+0x100>
		{
			switch (Copy_u8PORT)
 554:	89 81       	ldd	r24, Y+1	; 0x01
 556:	28 2f       	mov	r18, r24
 558:	30 e0       	ldi	r19, 0x00	; 0
 55a:	3f 83       	std	Y+7, r19	; 0x07
 55c:	2e 83       	std	Y+6, r18	; 0x06
 55e:	8e 81       	ldd	r24, Y+6	; 0x06
 560:	9f 81       	ldd	r25, Y+7	; 0x07
 562:	81 30       	cpi	r24, 0x01	; 1
 564:	91 05       	cpc	r25, r1
 566:	49 f1       	breq	.+82     	; 0x5ba <DIO_voidSetvaluePin+0x88>
 568:	2e 81       	ldd	r18, Y+6	; 0x06
 56a:	3f 81       	ldd	r19, Y+7	; 0x07
 56c:	22 30       	cpi	r18, 0x02	; 2
 56e:	31 05       	cpc	r19, r1
 570:	2c f4       	brge	.+10     	; 0x57c <DIO_voidSetvaluePin+0x4a>
 572:	8e 81       	ldd	r24, Y+6	; 0x06
 574:	9f 81       	ldd	r25, Y+7	; 0x07
 576:	00 97       	sbiw	r24, 0x00	; 0
 578:	61 f0       	breq	.+24     	; 0x592 <DIO_voidSetvaluePin+0x60>
 57a:	d2 c0       	rjmp	.+420    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
 57c:	2e 81       	ldd	r18, Y+6	; 0x06
 57e:	3f 81       	ldd	r19, Y+7	; 0x07
 580:	22 30       	cpi	r18, 0x02	; 2
 582:	31 05       	cpc	r19, r1
 584:	71 f1       	breq	.+92     	; 0x5e2 <DIO_voidSetvaluePin+0xb0>
 586:	8e 81       	ldd	r24, Y+6	; 0x06
 588:	9f 81       	ldd	r25, Y+7	; 0x07
 58a:	83 30       	cpi	r24, 0x03	; 3
 58c:	91 05       	cpc	r25, r1
 58e:	e9 f1       	breq	.+122    	; 0x60a <DIO_voidSetvaluePin+0xd8>
 590:	c7 c0       	rjmp	.+398    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
			{
			case DIO_PORTA:
				Set_Bit(PORTA,Copy_u8Pin);
 592:	ab e3       	ldi	r26, 0x3B	; 59
 594:	b0 e0       	ldi	r27, 0x00	; 0
 596:	eb e3       	ldi	r30, 0x3B	; 59
 598:	f0 e0       	ldi	r31, 0x00	; 0
 59a:	80 81       	ld	r24, Z
 59c:	48 2f       	mov	r20, r24
 59e:	8a 81       	ldd	r24, Y+2	; 0x02
 5a0:	28 2f       	mov	r18, r24
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	02 2e       	mov	r0, r18
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <DIO_voidSetvaluePin+0x7e>
 5ac:	88 0f       	add	r24, r24
 5ae:	99 1f       	adc	r25, r25
 5b0:	0a 94       	dec	r0
 5b2:	e2 f7       	brpl	.-8      	; 0x5ac <DIO_voidSetvaluePin+0x7a>
 5b4:	84 2b       	or	r24, r20
 5b6:	8c 93       	st	X, r24
 5b8:	b3 c0       	rjmp	.+358    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
				break;

			case DIO_PORTB:
				Set_Bit(PORTB,Copy_u8Pin);
 5ba:	a8 e3       	ldi	r26, 0x38	; 56
 5bc:	b0 e0       	ldi	r27, 0x00	; 0
 5be:	e8 e3       	ldi	r30, 0x38	; 56
 5c0:	f0 e0       	ldi	r31, 0x00	; 0
 5c2:	80 81       	ld	r24, Z
 5c4:	48 2f       	mov	r20, r24
 5c6:	8a 81       	ldd	r24, Y+2	; 0x02
 5c8:	28 2f       	mov	r18, r24
 5ca:	30 e0       	ldi	r19, 0x00	; 0
 5cc:	81 e0       	ldi	r24, 0x01	; 1
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	02 2e       	mov	r0, r18
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <DIO_voidSetvaluePin+0xa6>
 5d4:	88 0f       	add	r24, r24
 5d6:	99 1f       	adc	r25, r25
 5d8:	0a 94       	dec	r0
 5da:	e2 f7       	brpl	.-8      	; 0x5d4 <DIO_voidSetvaluePin+0xa2>
 5dc:	84 2b       	or	r24, r20
 5de:	8c 93       	st	X, r24
 5e0:	9f c0       	rjmp	.+318    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
				break;

			case DIO_PORTC:
				Set_Bit(PORTC,Copy_u8Pin);
 5e2:	a5 e3       	ldi	r26, 0x35	; 53
 5e4:	b0 e0       	ldi	r27, 0x00	; 0
 5e6:	e5 e3       	ldi	r30, 0x35	; 53
 5e8:	f0 e0       	ldi	r31, 0x00	; 0
 5ea:	80 81       	ld	r24, Z
 5ec:	48 2f       	mov	r20, r24
 5ee:	8a 81       	ldd	r24, Y+2	; 0x02
 5f0:	28 2f       	mov	r18, r24
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	81 e0       	ldi	r24, 0x01	; 1
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	02 2e       	mov	r0, r18
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <DIO_voidSetvaluePin+0xce>
 5fc:	88 0f       	add	r24, r24
 5fe:	99 1f       	adc	r25, r25
 600:	0a 94       	dec	r0
 602:	e2 f7       	brpl	.-8      	; 0x5fc <DIO_voidSetvaluePin+0xca>
 604:	84 2b       	or	r24, r20
 606:	8c 93       	st	X, r24
 608:	8b c0       	rjmp	.+278    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
				break;

			case DIO_PORTD:
				Set_Bit(PORTD,Copy_u8Pin);
 60a:	a2 e3       	ldi	r26, 0x32	; 50
 60c:	b0 e0       	ldi	r27, 0x00	; 0
 60e:	e2 e3       	ldi	r30, 0x32	; 50
 610:	f0 e0       	ldi	r31, 0x00	; 0
 612:	80 81       	ld	r24, Z
 614:	48 2f       	mov	r20, r24
 616:	8a 81       	ldd	r24, Y+2	; 0x02
 618:	28 2f       	mov	r18, r24
 61a:	30 e0       	ldi	r19, 0x00	; 0
 61c:	81 e0       	ldi	r24, 0x01	; 1
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	02 2e       	mov	r0, r18
 622:	02 c0       	rjmp	.+4      	; 0x628 <DIO_voidSetvaluePin+0xf6>
 624:	88 0f       	add	r24, r24
 626:	99 1f       	adc	r25, r25
 628:	0a 94       	dec	r0
 62a:	e2 f7       	brpl	.-8      	; 0x624 <DIO_voidSetvaluePin+0xf2>
 62c:	84 2b       	or	r24, r20
 62e:	8c 93       	st	X, r24
 630:	77 c0       	rjmp	.+238    	; 0x720 <DIO_voidSetvaluePin+0x1ee>

			default:
				break;
			}
		}
			else if (Copy_u8Value == LOW)
 632:	8b 81       	ldd	r24, Y+3	; 0x03
 634:	88 23       	and	r24, r24
 636:	09 f0       	breq	.+2      	; 0x63a <DIO_voidSetvaluePin+0x108>
 638:	73 c0       	rjmp	.+230    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
			{
				switch (Copy_u8PORT)
 63a:	89 81       	ldd	r24, Y+1	; 0x01
 63c:	28 2f       	mov	r18, r24
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	3d 83       	std	Y+5, r19	; 0x05
 642:	2c 83       	std	Y+4, r18	; 0x04
 644:	8c 81       	ldd	r24, Y+4	; 0x04
 646:	9d 81       	ldd	r25, Y+5	; 0x05
 648:	81 30       	cpi	r24, 0x01	; 1
 64a:	91 05       	cpc	r25, r1
 64c:	59 f1       	breq	.+86     	; 0x6a4 <DIO_voidSetvaluePin+0x172>
 64e:	2c 81       	ldd	r18, Y+4	; 0x04
 650:	3d 81       	ldd	r19, Y+5	; 0x05
 652:	22 30       	cpi	r18, 0x02	; 2
 654:	31 05       	cpc	r19, r1
 656:	2c f4       	brge	.+10     	; 0x662 <DIO_voidSetvaluePin+0x130>
 658:	8c 81       	ldd	r24, Y+4	; 0x04
 65a:	9d 81       	ldd	r25, Y+5	; 0x05
 65c:	00 97       	sbiw	r24, 0x00	; 0
 65e:	69 f0       	breq	.+26     	; 0x67a <DIO_voidSetvaluePin+0x148>
 660:	5f c0       	rjmp	.+190    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
 662:	2c 81       	ldd	r18, Y+4	; 0x04
 664:	3d 81       	ldd	r19, Y+5	; 0x05
 666:	22 30       	cpi	r18, 0x02	; 2
 668:	31 05       	cpc	r19, r1
 66a:	89 f1       	breq	.+98     	; 0x6ce <DIO_voidSetvaluePin+0x19c>
 66c:	8c 81       	ldd	r24, Y+4	; 0x04
 66e:	9d 81       	ldd	r25, Y+5	; 0x05
 670:	83 30       	cpi	r24, 0x03	; 3
 672:	91 05       	cpc	r25, r1
 674:	09 f4       	brne	.+2      	; 0x678 <DIO_voidSetvaluePin+0x146>
 676:	40 c0       	rjmp	.+128    	; 0x6f8 <DIO_voidSetvaluePin+0x1c6>
 678:	53 c0       	rjmp	.+166    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
				{
				case DIO_PORTA:
					Clear_Bit(PORTA,Copy_u8Pin);
 67a:	ab e3       	ldi	r26, 0x3B	; 59
 67c:	b0 e0       	ldi	r27, 0x00	; 0
 67e:	eb e3       	ldi	r30, 0x3B	; 59
 680:	f0 e0       	ldi	r31, 0x00	; 0
 682:	80 81       	ld	r24, Z
 684:	48 2f       	mov	r20, r24
 686:	8a 81       	ldd	r24, Y+2	; 0x02
 688:	28 2f       	mov	r18, r24
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	81 e0       	ldi	r24, 0x01	; 1
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	02 2e       	mov	r0, r18
 692:	02 c0       	rjmp	.+4      	; 0x698 <DIO_voidSetvaluePin+0x166>
 694:	88 0f       	add	r24, r24
 696:	99 1f       	adc	r25, r25
 698:	0a 94       	dec	r0
 69a:	e2 f7       	brpl	.-8      	; 0x694 <DIO_voidSetvaluePin+0x162>
 69c:	80 95       	com	r24
 69e:	84 23       	and	r24, r20
 6a0:	8c 93       	st	X, r24
 6a2:	3e c0       	rjmp	.+124    	; 0x720 <DIO_voidSetvaluePin+0x1ee>
					break;

				case DIO_PORTB:
					Clear_Bit(PORTB,Copy_u8Pin);
 6a4:	a8 e3       	ldi	r26, 0x38	; 56
 6a6:	b0 e0       	ldi	r27, 0x00	; 0
 6a8:	e8 e3       	ldi	r30, 0x38	; 56
 6aa:	f0 e0       	ldi	r31, 0x00	; 0
 6ac:	80 81       	ld	r24, Z
 6ae:	48 2f       	mov	r20, r24
 6b0:	8a 81       	ldd	r24, Y+2	; 0x02
 6b2:	28 2f       	mov	r18, r24
 6b4:	30 e0       	ldi	r19, 0x00	; 0
 6b6:	81 e0       	ldi	r24, 0x01	; 1
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	02 2e       	mov	r0, r18
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <DIO_voidSetvaluePin+0x190>
 6be:	88 0f       	add	r24, r24
 6c0:	99 1f       	adc	r25, r25
 6c2:	0a 94       	dec	r0
 6c4:	e2 f7       	brpl	.-8      	; 0x6be <DIO_voidSetvaluePin+0x18c>
 6c6:	80 95       	com	r24
 6c8:	84 23       	and	r24, r20
 6ca:	8c 93       	st	X, r24
 6cc:	29 c0       	rjmp	.+82     	; 0x720 <DIO_voidSetvaluePin+0x1ee>
					break;

				case DIO_PORTC:
					Clear_Bit(PORTC,Copy_u8Pin);
 6ce:	a5 e3       	ldi	r26, 0x35	; 53
 6d0:	b0 e0       	ldi	r27, 0x00	; 0
 6d2:	e5 e3       	ldi	r30, 0x35	; 53
 6d4:	f0 e0       	ldi	r31, 0x00	; 0
 6d6:	80 81       	ld	r24, Z
 6d8:	48 2f       	mov	r20, r24
 6da:	8a 81       	ldd	r24, Y+2	; 0x02
 6dc:	28 2f       	mov	r18, r24
 6de:	30 e0       	ldi	r19, 0x00	; 0
 6e0:	81 e0       	ldi	r24, 0x01	; 1
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	02 2e       	mov	r0, r18
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <DIO_voidSetvaluePin+0x1ba>
 6e8:	88 0f       	add	r24, r24
 6ea:	99 1f       	adc	r25, r25
 6ec:	0a 94       	dec	r0
 6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <DIO_voidSetvaluePin+0x1b6>
 6f0:	80 95       	com	r24
 6f2:	84 23       	and	r24, r20
 6f4:	8c 93       	st	X, r24
 6f6:	14 c0       	rjmp	.+40     	; 0x720 <DIO_voidSetvaluePin+0x1ee>
					break;

				case DIO_PORTD:
					Clear_Bit(PORTD,Copy_u8Pin);
 6f8:	a2 e3       	ldi	r26, 0x32	; 50
 6fa:	b0 e0       	ldi	r27, 0x00	; 0
 6fc:	e2 e3       	ldi	r30, 0x32	; 50
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	80 81       	ld	r24, Z
 702:	48 2f       	mov	r20, r24
 704:	8a 81       	ldd	r24, Y+2	; 0x02
 706:	28 2f       	mov	r18, r24
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	81 e0       	ldi	r24, 0x01	; 1
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	02 2e       	mov	r0, r18
 710:	02 c0       	rjmp	.+4      	; 0x716 <DIO_voidSetvaluePin+0x1e4>
 712:	88 0f       	add	r24, r24
 714:	99 1f       	adc	r25, r25
 716:	0a 94       	dec	r0
 718:	e2 f7       	brpl	.-8      	; 0x712 <DIO_voidSetvaluePin+0x1e0>
 71a:	80 95       	com	r24
 71c:	84 23       	and	r24, r20
 71e:	8c 93       	st	X, r24

				default:
					break;
				 }
			}
}
 720:	27 96       	adiw	r28, 0x07	; 7
 722:	0f b6       	in	r0, 0x3f	; 63
 724:	f8 94       	cli
 726:	de bf       	out	0x3e, r29	; 62
 728:	0f be       	out	0x3f, r0	; 63
 72a:	cd bf       	out	0x3d, r28	; 61
 72c:	cf 91       	pop	r28
 72e:	df 91       	pop	r29
 730:	08 95       	ret

00000732 <DIO_voidPullUPPin>:

void DIO_voidPullUPPin(u8 Copy_u8PORT , u8 Copy_u8Pin)
{
 732:	df 93       	push	r29
 734:	cf 93       	push	r28
 736:	00 d0       	rcall	.+0      	; 0x738 <DIO_voidPullUPPin+0x6>
 738:	00 d0       	rcall	.+0      	; 0x73a <DIO_voidPullUPPin+0x8>
 73a:	cd b7       	in	r28, 0x3d	; 61
 73c:	de b7       	in	r29, 0x3e	; 62
 73e:	89 83       	std	Y+1, r24	; 0x01
 740:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_u8PORT)
 742:	89 81       	ldd	r24, Y+1	; 0x01
 744:	28 2f       	mov	r18, r24
 746:	30 e0       	ldi	r19, 0x00	; 0
 748:	3c 83       	std	Y+4, r19	; 0x04
 74a:	2b 83       	std	Y+3, r18	; 0x03
 74c:	8b 81       	ldd	r24, Y+3	; 0x03
 74e:	9c 81       	ldd	r25, Y+4	; 0x04
 750:	81 30       	cpi	r24, 0x01	; 1
 752:	91 05       	cpc	r25, r1
 754:	09 f4       	brne	.+2      	; 0x758 <DIO_voidPullUPPin+0x26>
 756:	3e c0       	rjmp	.+124    	; 0x7d4 <DIO_voidPullUPPin+0xa2>
 758:	2b 81       	ldd	r18, Y+3	; 0x03
 75a:	3c 81       	ldd	r19, Y+4	; 0x04
 75c:	22 30       	cpi	r18, 0x02	; 2
 75e:	31 05       	cpc	r19, r1
 760:	2c f4       	brge	.+10     	; 0x76c <DIO_voidPullUPPin+0x3a>
 762:	8b 81       	ldd	r24, Y+3	; 0x03
 764:	9c 81       	ldd	r25, Y+4	; 0x04
 766:	00 97       	sbiw	r24, 0x00	; 0
 768:	71 f0       	breq	.+28     	; 0x786 <DIO_voidPullUPPin+0x54>
 76a:	a8 c0       	rjmp	.+336    	; 0x8bc <__stack+0x5d>
 76c:	2b 81       	ldd	r18, Y+3	; 0x03
 76e:	3c 81       	ldd	r19, Y+4	; 0x04
 770:	22 30       	cpi	r18, 0x02	; 2
 772:	31 05       	cpc	r19, r1
 774:	09 f4       	brne	.+2      	; 0x778 <DIO_voidPullUPPin+0x46>
 776:	55 c0       	rjmp	.+170    	; 0x822 <DIO_voidPullUPPin+0xf0>
 778:	8b 81       	ldd	r24, Y+3	; 0x03
 77a:	9c 81       	ldd	r25, Y+4	; 0x04
 77c:	83 30       	cpi	r24, 0x03	; 3
 77e:	91 05       	cpc	r25, r1
 780:	09 f4       	brne	.+2      	; 0x784 <DIO_voidPullUPPin+0x52>
 782:	76 c0       	rjmp	.+236    	; 0x870 <__stack+0x11>
 784:	9b c0       	rjmp	.+310    	; 0x8bc <__stack+0x5d>
	{
	case DIO_PORTA:
		Clear_Bit(DDRA,Copy_u8Pin);
 786:	aa e3       	ldi	r26, 0x3A	; 58
 788:	b0 e0       	ldi	r27, 0x00	; 0
 78a:	ea e3       	ldi	r30, 0x3A	; 58
 78c:	f0 e0       	ldi	r31, 0x00	; 0
 78e:	80 81       	ld	r24, Z
 790:	48 2f       	mov	r20, r24
 792:	8a 81       	ldd	r24, Y+2	; 0x02
 794:	28 2f       	mov	r18, r24
 796:	30 e0       	ldi	r19, 0x00	; 0
 798:	81 e0       	ldi	r24, 0x01	; 1
 79a:	90 e0       	ldi	r25, 0x00	; 0
 79c:	02 c0       	rjmp	.+4      	; 0x7a2 <DIO_voidPullUPPin+0x70>
 79e:	88 0f       	add	r24, r24
 7a0:	99 1f       	adc	r25, r25
 7a2:	2a 95       	dec	r18
 7a4:	e2 f7       	brpl	.-8      	; 0x79e <DIO_voidPullUPPin+0x6c>
 7a6:	80 95       	com	r24
 7a8:	84 23       	and	r24, r20
 7aa:	8c 93       	st	X, r24
		Set_Bit(PINA,Copy_u8Pin);
 7ac:	a9 e3       	ldi	r26, 0x39	; 57
 7ae:	b0 e0       	ldi	r27, 0x00	; 0
 7b0:	e9 e3       	ldi	r30, 0x39	; 57
 7b2:	f0 e0       	ldi	r31, 0x00	; 0
 7b4:	80 81       	ld	r24, Z
 7b6:	48 2f       	mov	r20, r24
 7b8:	8a 81       	ldd	r24, Y+2	; 0x02
 7ba:	28 2f       	mov	r18, r24
 7bc:	30 e0       	ldi	r19, 0x00	; 0
 7be:	81 e0       	ldi	r24, 0x01	; 1
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	02 2e       	mov	r0, r18
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <DIO_voidPullUPPin+0x98>
 7c6:	88 0f       	add	r24, r24
 7c8:	99 1f       	adc	r25, r25
 7ca:	0a 94       	dec	r0
 7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <DIO_voidPullUPPin+0x94>
 7ce:	84 2b       	or	r24, r20
 7d0:	8c 93       	st	X, r24
 7d2:	74 c0       	rjmp	.+232    	; 0x8bc <__stack+0x5d>
		break;

	case DIO_PORTB:
		Clear_Bit(DDRB,Copy_u8Pin);
 7d4:	a7 e3       	ldi	r26, 0x37	; 55
 7d6:	b0 e0       	ldi	r27, 0x00	; 0
 7d8:	e7 e3       	ldi	r30, 0x37	; 55
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	80 81       	ld	r24, Z
 7de:	48 2f       	mov	r20, r24
 7e0:	8a 81       	ldd	r24, Y+2	; 0x02
 7e2:	28 2f       	mov	r18, r24
 7e4:	30 e0       	ldi	r19, 0x00	; 0
 7e6:	81 e0       	ldi	r24, 0x01	; 1
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <DIO_voidPullUPPin+0xbe>
 7ec:	88 0f       	add	r24, r24
 7ee:	99 1f       	adc	r25, r25
 7f0:	2a 95       	dec	r18
 7f2:	e2 f7       	brpl	.-8      	; 0x7ec <DIO_voidPullUPPin+0xba>
 7f4:	80 95       	com	r24
 7f6:	84 23       	and	r24, r20
 7f8:	8c 93       	st	X, r24
		Set_Bit(PINB,Copy_u8Pin);
 7fa:	a6 e3       	ldi	r26, 0x36	; 54
 7fc:	b0 e0       	ldi	r27, 0x00	; 0
 7fe:	e6 e3       	ldi	r30, 0x36	; 54
 800:	f0 e0       	ldi	r31, 0x00	; 0
 802:	80 81       	ld	r24, Z
 804:	48 2f       	mov	r20, r24
 806:	8a 81       	ldd	r24, Y+2	; 0x02
 808:	28 2f       	mov	r18, r24
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	81 e0       	ldi	r24, 0x01	; 1
 80e:	90 e0       	ldi	r25, 0x00	; 0
 810:	02 2e       	mov	r0, r18
 812:	02 c0       	rjmp	.+4      	; 0x818 <DIO_voidPullUPPin+0xe6>
 814:	88 0f       	add	r24, r24
 816:	99 1f       	adc	r25, r25
 818:	0a 94       	dec	r0
 81a:	e2 f7       	brpl	.-8      	; 0x814 <DIO_voidPullUPPin+0xe2>
 81c:	84 2b       	or	r24, r20
 81e:	8c 93       	st	X, r24
 820:	4d c0       	rjmp	.+154    	; 0x8bc <__stack+0x5d>
		break;

	case DIO_PORTC:
		Clear_Bit(DDRC,Copy_u8Pin);
 822:	a4 e3       	ldi	r26, 0x34	; 52
 824:	b0 e0       	ldi	r27, 0x00	; 0
 826:	e4 e3       	ldi	r30, 0x34	; 52
 828:	f0 e0       	ldi	r31, 0x00	; 0
 82a:	80 81       	ld	r24, Z
 82c:	48 2f       	mov	r20, r24
 82e:	8a 81       	ldd	r24, Y+2	; 0x02
 830:	28 2f       	mov	r18, r24
 832:	30 e0       	ldi	r19, 0x00	; 0
 834:	81 e0       	ldi	r24, 0x01	; 1
 836:	90 e0       	ldi	r25, 0x00	; 0
 838:	02 c0       	rjmp	.+4      	; 0x83e <DIO_voidPullUPPin+0x10c>
 83a:	88 0f       	add	r24, r24
 83c:	99 1f       	adc	r25, r25
 83e:	2a 95       	dec	r18
 840:	e2 f7       	brpl	.-8      	; 0x83a <DIO_voidPullUPPin+0x108>
 842:	80 95       	com	r24
 844:	84 23       	and	r24, r20
 846:	8c 93       	st	X, r24
		Set_Bit(PINC,Copy_u8Pin);
 848:	a3 e3       	ldi	r26, 0x33	; 51
 84a:	b0 e0       	ldi	r27, 0x00	; 0
 84c:	e3 e3       	ldi	r30, 0x33	; 51
 84e:	f0 e0       	ldi	r31, 0x00	; 0
 850:	80 81       	ld	r24, Z
 852:	48 2f       	mov	r20, r24
 854:	8a 81       	ldd	r24, Y+2	; 0x02
 856:	28 2f       	mov	r18, r24
 858:	30 e0       	ldi	r19, 0x00	; 0
 85a:	81 e0       	ldi	r24, 0x01	; 1
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	02 2e       	mov	r0, r18
 860:	02 c0       	rjmp	.+4      	; 0x866 <__stack+0x7>
 862:	88 0f       	add	r24, r24
 864:	99 1f       	adc	r25, r25
 866:	0a 94       	dec	r0
 868:	e2 f7       	brpl	.-8      	; 0x862 <__stack+0x3>
 86a:	84 2b       	or	r24, r20
 86c:	8c 93       	st	X, r24
 86e:	26 c0       	rjmp	.+76     	; 0x8bc <__stack+0x5d>
		break;

	case DIO_PORTD:
		Clear_Bit(DDRD,Copy_u8Pin);
 870:	a1 e3       	ldi	r26, 0x31	; 49
 872:	b0 e0       	ldi	r27, 0x00	; 0
 874:	e1 e3       	ldi	r30, 0x31	; 49
 876:	f0 e0       	ldi	r31, 0x00	; 0
 878:	80 81       	ld	r24, Z
 87a:	48 2f       	mov	r20, r24
 87c:	8a 81       	ldd	r24, Y+2	; 0x02
 87e:	28 2f       	mov	r18, r24
 880:	30 e0       	ldi	r19, 0x00	; 0
 882:	81 e0       	ldi	r24, 0x01	; 1
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	02 c0       	rjmp	.+4      	; 0x88c <__stack+0x2d>
 888:	88 0f       	add	r24, r24
 88a:	99 1f       	adc	r25, r25
 88c:	2a 95       	dec	r18
 88e:	e2 f7       	brpl	.-8      	; 0x888 <__stack+0x29>
 890:	80 95       	com	r24
 892:	84 23       	and	r24, r20
 894:	8c 93       	st	X, r24
		Set_Bit(PIND,Copy_u8Pin);
 896:	a0 e3       	ldi	r26, 0x30	; 48
 898:	b0 e0       	ldi	r27, 0x00	; 0
 89a:	e0 e3       	ldi	r30, 0x30	; 48
 89c:	f0 e0       	ldi	r31, 0x00	; 0
 89e:	80 81       	ld	r24, Z
 8a0:	48 2f       	mov	r20, r24
 8a2:	8a 81       	ldd	r24, Y+2	; 0x02
 8a4:	28 2f       	mov	r18, r24
 8a6:	30 e0       	ldi	r19, 0x00	; 0
 8a8:	81 e0       	ldi	r24, 0x01	; 1
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	02 2e       	mov	r0, r18
 8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <__stack+0x55>
 8b0:	88 0f       	add	r24, r24
 8b2:	99 1f       	adc	r25, r25
 8b4:	0a 94       	dec	r0
 8b6:	e2 f7       	brpl	.-8      	; 0x8b0 <__stack+0x51>
 8b8:	84 2b       	or	r24, r20
 8ba:	8c 93       	st	X, r24
		break;

	default:
		break;
	}
}
 8bc:	0f 90       	pop	r0
 8be:	0f 90       	pop	r0
 8c0:	0f 90       	pop	r0
 8c2:	0f 90       	pop	r0
 8c4:	cf 91       	pop	r28
 8c6:	df 91       	pop	r29
 8c8:	08 95       	ret

000008ca <DIO_voidReadvaluePin>:

u8 DIO_voidReadvaluePin(u8 Copy_u8PORT , u8 Copy_u8Pin)
{
 8ca:	df 93       	push	r29
 8cc:	cf 93       	push	r28
 8ce:	00 d0       	rcall	.+0      	; 0x8d0 <DIO_voidReadvaluePin+0x6>
 8d0:	00 d0       	rcall	.+0      	; 0x8d2 <DIO_voidReadvaluePin+0x8>
 8d2:	0f 92       	push	r0
 8d4:	cd b7       	in	r28, 0x3d	; 61
 8d6:	de b7       	in	r29, 0x3e	; 62
 8d8:	8a 83       	std	Y+2, r24	; 0x02
 8da:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8Value;
	switch (Copy_u8PORT)
 8dc:	8a 81       	ldd	r24, Y+2	; 0x02
 8de:	28 2f       	mov	r18, r24
 8e0:	30 e0       	ldi	r19, 0x00	; 0
 8e2:	3d 83       	std	Y+5, r19	; 0x05
 8e4:	2c 83       	std	Y+4, r18	; 0x04
 8e6:	4c 81       	ldd	r20, Y+4	; 0x04
 8e8:	5d 81       	ldd	r21, Y+5	; 0x05
 8ea:	41 30       	cpi	r20, 0x01	; 1
 8ec:	51 05       	cpc	r21, r1
 8ee:	41 f1       	breq	.+80     	; 0x940 <DIO_voidReadvaluePin+0x76>
 8f0:	8c 81       	ldd	r24, Y+4	; 0x04
 8f2:	9d 81       	ldd	r25, Y+5	; 0x05
 8f4:	82 30       	cpi	r24, 0x02	; 2
 8f6:	91 05       	cpc	r25, r1
 8f8:	34 f4       	brge	.+12     	; 0x906 <DIO_voidReadvaluePin+0x3c>
 8fa:	2c 81       	ldd	r18, Y+4	; 0x04
 8fc:	3d 81       	ldd	r19, Y+5	; 0x05
 8fe:	21 15       	cp	r18, r1
 900:	31 05       	cpc	r19, r1
 902:	61 f0       	breq	.+24     	; 0x91c <DIO_voidReadvaluePin+0x52>
 904:	52 c0       	rjmp	.+164    	; 0x9aa <DIO_voidReadvaluePin+0xe0>
 906:	4c 81       	ldd	r20, Y+4	; 0x04
 908:	5d 81       	ldd	r21, Y+5	; 0x05
 90a:	42 30       	cpi	r20, 0x02	; 2
 90c:	51 05       	cpc	r21, r1
 90e:	51 f1       	breq	.+84     	; 0x964 <DIO_voidReadvaluePin+0x9a>
 910:	8c 81       	ldd	r24, Y+4	; 0x04
 912:	9d 81       	ldd	r25, Y+5	; 0x05
 914:	83 30       	cpi	r24, 0x03	; 3
 916:	91 05       	cpc	r25, r1
 918:	b9 f1       	breq	.+110    	; 0x988 <DIO_voidReadvaluePin+0xbe>
 91a:	47 c0       	rjmp	.+142    	; 0x9aa <DIO_voidReadvaluePin+0xe0>
	{
	case DIO_PORTA:
		Local_u8Value= Get_Bit(PINA,Copy_u8Pin);
 91c:	e9 e3       	ldi	r30, 0x39	; 57
 91e:	f0 e0       	ldi	r31, 0x00	; 0
 920:	80 81       	ld	r24, Z
 922:	28 2f       	mov	r18, r24
 924:	30 e0       	ldi	r19, 0x00	; 0
 926:	8b 81       	ldd	r24, Y+3	; 0x03
 928:	88 2f       	mov	r24, r24
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	a9 01       	movw	r20, r18
 92e:	02 c0       	rjmp	.+4      	; 0x934 <DIO_voidReadvaluePin+0x6a>
 930:	55 95       	asr	r21
 932:	47 95       	ror	r20
 934:	8a 95       	dec	r24
 936:	e2 f7       	brpl	.-8      	; 0x930 <DIO_voidReadvaluePin+0x66>
 938:	ca 01       	movw	r24, r20
 93a:	81 70       	andi	r24, 0x01	; 1
 93c:	89 83       	std	Y+1, r24	; 0x01
 93e:	35 c0       	rjmp	.+106    	; 0x9aa <DIO_voidReadvaluePin+0xe0>
		break;

		case DIO_PORTB:
			Local_u8Value= Get_Bit(PINB,Copy_u8Pin);
 940:	e6 e3       	ldi	r30, 0x36	; 54
 942:	f0 e0       	ldi	r31, 0x00	; 0
 944:	80 81       	ld	r24, Z
 946:	28 2f       	mov	r18, r24
 948:	30 e0       	ldi	r19, 0x00	; 0
 94a:	8b 81       	ldd	r24, Y+3	; 0x03
 94c:	88 2f       	mov	r24, r24
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	a9 01       	movw	r20, r18
 952:	02 c0       	rjmp	.+4      	; 0x958 <DIO_voidReadvaluePin+0x8e>
 954:	55 95       	asr	r21
 956:	47 95       	ror	r20
 958:	8a 95       	dec	r24
 95a:	e2 f7       	brpl	.-8      	; 0x954 <DIO_voidReadvaluePin+0x8a>
 95c:	ca 01       	movw	r24, r20
 95e:	81 70       	andi	r24, 0x01	; 1
 960:	89 83       	std	Y+1, r24	; 0x01
 962:	23 c0       	rjmp	.+70     	; 0x9aa <DIO_voidReadvaluePin+0xe0>
			break;

		case DIO_PORTC:
			Local_u8Value= Get_Bit(PINC,Copy_u8Pin);
 964:	e3 e3       	ldi	r30, 0x33	; 51
 966:	f0 e0       	ldi	r31, 0x00	; 0
 968:	80 81       	ld	r24, Z
 96a:	28 2f       	mov	r18, r24
 96c:	30 e0       	ldi	r19, 0x00	; 0
 96e:	8b 81       	ldd	r24, Y+3	; 0x03
 970:	88 2f       	mov	r24, r24
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	a9 01       	movw	r20, r18
 976:	02 c0       	rjmp	.+4      	; 0x97c <DIO_voidReadvaluePin+0xb2>
 978:	55 95       	asr	r21
 97a:	47 95       	ror	r20
 97c:	8a 95       	dec	r24
 97e:	e2 f7       	brpl	.-8      	; 0x978 <DIO_voidReadvaluePin+0xae>
 980:	ca 01       	movw	r24, r20
 982:	81 70       	andi	r24, 0x01	; 1
 984:	89 83       	std	Y+1, r24	; 0x01
 986:	11 c0       	rjmp	.+34     	; 0x9aa <DIO_voidReadvaluePin+0xe0>
			break;

		case DIO_PORTD:
			Local_u8Value= Get_Bit(PIND,Copy_u8Pin);
 988:	e0 e3       	ldi	r30, 0x30	; 48
 98a:	f0 e0       	ldi	r31, 0x00	; 0
 98c:	80 81       	ld	r24, Z
 98e:	28 2f       	mov	r18, r24
 990:	30 e0       	ldi	r19, 0x00	; 0
 992:	8b 81       	ldd	r24, Y+3	; 0x03
 994:	88 2f       	mov	r24, r24
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	a9 01       	movw	r20, r18
 99a:	02 c0       	rjmp	.+4      	; 0x9a0 <DIO_voidReadvaluePin+0xd6>
 99c:	55 95       	asr	r21
 99e:	47 95       	ror	r20
 9a0:	8a 95       	dec	r24
 9a2:	e2 f7       	brpl	.-8      	; 0x99c <DIO_voidReadvaluePin+0xd2>
 9a4:	ca 01       	movw	r24, r20
 9a6:	81 70       	andi	r24, 0x01	; 1
 9a8:	89 83       	std	Y+1, r24	; 0x01
			break;

		default:
			break;
	}
	return Local_u8Value;
 9aa:	89 81       	ldd	r24, Y+1	; 0x01
}
 9ac:	0f 90       	pop	r0
 9ae:	0f 90       	pop	r0
 9b0:	0f 90       	pop	r0
 9b2:	0f 90       	pop	r0
 9b4:	0f 90       	pop	r0
 9b6:	cf 91       	pop	r28
 9b8:	df 91       	pop	r29
 9ba:	08 95       	ret

000009bc <LED_voidON_OFF>:
#include "..\..\MCAL\DIO\DIO_CONFIG.h"

#include "LED.h"

void LED_voidON_OFF (u8 Copy_u8PORT,u8 Copy_u8PIN,u8 ON_OFF)
{
 9bc:	df 93       	push	r29
 9be:	cf 93       	push	r28
 9c0:	00 d0       	rcall	.+0      	; 0x9c2 <LED_voidON_OFF+0x6>
 9c2:	00 d0       	rcall	.+0      	; 0x9c4 <LED_voidON_OFF+0x8>
 9c4:	0f 92       	push	r0
 9c6:	cd b7       	in	r28, 0x3d	; 61
 9c8:	de b7       	in	r29, 0x3e	; 62
 9ca:	89 83       	std	Y+1, r24	; 0x01
 9cc:	6a 83       	std	Y+2, r22	; 0x02
 9ce:	4b 83       	std	Y+3, r20	; 0x03
	switch (Copy_u8PORT)
 9d0:	89 81       	ldd	r24, Y+1	; 0x01
 9d2:	28 2f       	mov	r18, r24
 9d4:	30 e0       	ldi	r19, 0x00	; 0
 9d6:	3d 83       	std	Y+5, r19	; 0x05
 9d8:	2c 83       	std	Y+4, r18	; 0x04
 9da:	8c 81       	ldd	r24, Y+4	; 0x04
 9dc:	9d 81       	ldd	r25, Y+5	; 0x05
 9de:	81 30       	cpi	r24, 0x01	; 1
 9e0:	91 05       	cpc	r25, r1
 9e2:	d9 f0       	breq	.+54     	; 0xa1a <LED_voidON_OFF+0x5e>
 9e4:	2c 81       	ldd	r18, Y+4	; 0x04
 9e6:	3d 81       	ldd	r19, Y+5	; 0x05
 9e8:	22 30       	cpi	r18, 0x02	; 2
 9ea:	31 05       	cpc	r19, r1
 9ec:	2c f4       	brge	.+10     	; 0x9f8 <LED_voidON_OFF+0x3c>
 9ee:	8c 81       	ldd	r24, Y+4	; 0x04
 9f0:	9d 81       	ldd	r25, Y+5	; 0x05
 9f2:	00 97       	sbiw	r24, 0x00	; 0
 9f4:	61 f0       	breq	.+24     	; 0xa0e <LED_voidON_OFF+0x52>
 9f6:	22 c0       	rjmp	.+68     	; 0xa3c <LED_voidON_OFF+0x80>
 9f8:	2c 81       	ldd	r18, Y+4	; 0x04
 9fa:	3d 81       	ldd	r19, Y+5	; 0x05
 9fc:	22 30       	cpi	r18, 0x02	; 2
 9fe:	31 05       	cpc	r19, r1
 a00:	91 f0       	breq	.+36     	; 0xa26 <LED_voidON_OFF+0x6a>
 a02:	8c 81       	ldd	r24, Y+4	; 0x04
 a04:	9d 81       	ldd	r25, Y+5	; 0x05
 a06:	83 30       	cpi	r24, 0x03	; 3
 a08:	91 05       	cpc	r25, r1
 a0a:	99 f0       	breq	.+38     	; 0xa32 <LED_voidON_OFF+0x76>
 a0c:	17 c0       	rjmp	.+46     	; 0xa3c <LED_voidON_OFF+0x80>
	{
	case DIO_PORTA:
		DIO_voidSetvaluePin(DIO_PORTA,Copy_u8PIN,ON_OFF);
 a0e:	80 e0       	ldi	r24, 0x00	; 0
 a10:	6a 81       	ldd	r22, Y+2	; 0x02
 a12:	4b 81       	ldd	r20, Y+3	; 0x03
 a14:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
 a18:	11 c0       	rjmp	.+34     	; 0xa3c <LED_voidON_OFF+0x80>
		break;
	case DIO_PORTB:
		DIO_voidSetvaluePin(DIO_PORTB,Copy_u8PIN,ON_OFF);
 a1a:	81 e0       	ldi	r24, 0x01	; 1
 a1c:	6a 81       	ldd	r22, Y+2	; 0x02
 a1e:	4b 81       	ldd	r20, Y+3	; 0x03
 a20:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
 a24:	0b c0       	rjmp	.+22     	; 0xa3c <LED_voidON_OFF+0x80>
		break;
	case DIO_PORTC:
		DIO_voidSetvaluePin(DIO_PORTC,Copy_u8PIN,ON_OFF);
 a26:	82 e0       	ldi	r24, 0x02	; 2
 a28:	6a 81       	ldd	r22, Y+2	; 0x02
 a2a:	4b 81       	ldd	r20, Y+3	; 0x03
 a2c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
 a30:	05 c0       	rjmp	.+10     	; 0xa3c <LED_voidON_OFF+0x80>
		break;
	case DIO_PORTD:
		DIO_voidSetvaluePin(DIO_PORTD,Copy_u8PIN,ON_OFF);
 a32:	83 e0       	ldi	r24, 0x03	; 3
 a34:	6a 81       	ldd	r22, Y+2	; 0x02
 a36:	4b 81       	ldd	r20, Y+3	; 0x03
 a38:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
		break;

	default:
		break;
	}
}
 a3c:	0f 90       	pop	r0
 a3e:	0f 90       	pop	r0
 a40:	0f 90       	pop	r0
 a42:	0f 90       	pop	r0
 a44:	0f 90       	pop	r0
 a46:	cf 91       	pop	r28
 a48:	df 91       	pop	r29
 a4a:	08 95       	ret

00000a4c <BUTTON_voidPressed_NOT>:
#include "..\..\MCAL\DIO\DIO_CONFIG.h"

#include "BUTTON.h"

u8 BUTTON_voidPressed_NOT (u8 Copy_u8PORT,u8 Copy_u8PIN)
{
 a4c:	df 93       	push	r29
 a4e:	cf 93       	push	r28
 a50:	00 d0       	rcall	.+0      	; 0xa52 <BUTTON_voidPressed_NOT+0x6>
 a52:	00 d0       	rcall	.+0      	; 0xa54 <BUTTON_voidPressed_NOT+0x8>
 a54:	0f 92       	push	r0
 a56:	cd b7       	in	r28, 0x3d	; 61
 a58:	de b7       	in	r29, 0x3e	; 62
 a5a:	8a 83       	std	Y+2, r24	; 0x02
 a5c:	6b 83       	std	Y+3, r22	; 0x03
	u8 Returned;
	switch (Copy_u8PORT)
 a5e:	8a 81       	ldd	r24, Y+2	; 0x02
 a60:	28 2f       	mov	r18, r24
 a62:	30 e0       	ldi	r19, 0x00	; 0
 a64:	3d 83       	std	Y+5, r19	; 0x05
 a66:	2c 83       	std	Y+4, r18	; 0x04
 a68:	8c 81       	ldd	r24, Y+4	; 0x04
 a6a:	9d 81       	ldd	r25, Y+5	; 0x05
 a6c:	81 30       	cpi	r24, 0x01	; 1
 a6e:	91 05       	cpc	r25, r1
 a70:	d9 f0       	breq	.+54     	; 0xaa8 <BUTTON_voidPressed_NOT+0x5c>
 a72:	2c 81       	ldd	r18, Y+4	; 0x04
 a74:	3d 81       	ldd	r19, Y+5	; 0x05
 a76:	22 30       	cpi	r18, 0x02	; 2
 a78:	31 05       	cpc	r19, r1
 a7a:	2c f4       	brge	.+10     	; 0xa86 <BUTTON_voidPressed_NOT+0x3a>
 a7c:	8c 81       	ldd	r24, Y+4	; 0x04
 a7e:	9d 81       	ldd	r25, Y+5	; 0x05
 a80:	00 97       	sbiw	r24, 0x00	; 0
 a82:	61 f0       	breq	.+24     	; 0xa9c <BUTTON_voidPressed_NOT+0x50>
 a84:	22 c0       	rjmp	.+68     	; 0xaca <BUTTON_voidPressed_NOT+0x7e>
 a86:	2c 81       	ldd	r18, Y+4	; 0x04
 a88:	3d 81       	ldd	r19, Y+5	; 0x05
 a8a:	22 30       	cpi	r18, 0x02	; 2
 a8c:	31 05       	cpc	r19, r1
 a8e:	91 f0       	breq	.+36     	; 0xab4 <BUTTON_voidPressed_NOT+0x68>
 a90:	8c 81       	ldd	r24, Y+4	; 0x04
 a92:	9d 81       	ldd	r25, Y+5	; 0x05
 a94:	83 30       	cpi	r24, 0x03	; 3
 a96:	91 05       	cpc	r25, r1
 a98:	99 f0       	breq	.+38     	; 0xac0 <BUTTON_voidPressed_NOT+0x74>
 a9a:	17 c0       	rjmp	.+46     	; 0xaca <BUTTON_voidPressed_NOT+0x7e>
		{
		case DIO_PORTA:
			Returned=DIO_voidReadvaluePin(DIO_PORTA,Copy_u8PIN);
 a9c:	80 e0       	ldi	r24, 0x00	; 0
 a9e:	6b 81       	ldd	r22, Y+3	; 0x03
 aa0:	0e 94 65 04 	call	0x8ca	; 0x8ca <DIO_voidReadvaluePin>
 aa4:	89 83       	std	Y+1, r24	; 0x01
 aa6:	11 c0       	rjmp	.+34     	; 0xaca <BUTTON_voidPressed_NOT+0x7e>
			break;
		case DIO_PORTB:
			Returned=DIO_voidReadvaluePin(DIO_PORTB,Copy_u8PIN);
 aa8:	81 e0       	ldi	r24, 0x01	; 1
 aaa:	6b 81       	ldd	r22, Y+3	; 0x03
 aac:	0e 94 65 04 	call	0x8ca	; 0x8ca <DIO_voidReadvaluePin>
 ab0:	89 83       	std	Y+1, r24	; 0x01
 ab2:	0b c0       	rjmp	.+22     	; 0xaca <BUTTON_voidPressed_NOT+0x7e>
			break;
		case DIO_PORTC:
			Returned=DIO_voidReadvaluePin(DIO_PORTC,Copy_u8PIN);
 ab4:	82 e0       	ldi	r24, 0x02	; 2
 ab6:	6b 81       	ldd	r22, Y+3	; 0x03
 ab8:	0e 94 65 04 	call	0x8ca	; 0x8ca <DIO_voidReadvaluePin>
 abc:	89 83       	std	Y+1, r24	; 0x01
 abe:	05 c0       	rjmp	.+10     	; 0xaca <BUTTON_voidPressed_NOT+0x7e>
			break;
		case DIO_PORTD:
			Returned=DIO_voidReadvaluePin(DIO_PORTD,Copy_u8PIN);
 ac0:	83 e0       	ldi	r24, 0x03	; 3
 ac2:	6b 81       	ldd	r22, Y+3	; 0x03
 ac4:	0e 94 65 04 	call	0x8ca	; 0x8ca <DIO_voidReadvaluePin>
 ac8:	89 83       	std	Y+1, r24	; 0x01
			break;

		default:
			break;
		}
	return Returned;
 aca:	89 81       	ldd	r24, Y+1	; 0x01
}
 acc:	0f 90       	pop	r0
 ace:	0f 90       	pop	r0
 ad0:	0f 90       	pop	r0
 ad2:	0f 90       	pop	r0
 ad4:	0f 90       	pop	r0
 ad6:	cf 91       	pop	r28
 ad8:	df 91       	pop	r29
 ada:	08 95       	ret

00000adc <AppInit>:
#include "App.h"

u8 Flag,STATE;

void AppInit(void)
{
 adc:	df 93       	push	r29
 ade:	cf 93       	push	r28
 ae0:	cd b7       	in	r28, 0x3d	; 61
 ae2:	de b7       	in	r29, 0x3e	; 62
	/*Interrupt initialization*/
	INT_voidGlobalInterrupt();
 ae4:	0e 94 1b 01 	call	0x236	; 0x236 <INT_voidGlobalInterrupt>
	INT0_voidInit();
 ae8:	0e 94 29 01 	call	0x252	; 0x252 <INT0_voidInit>
	INT0_voidEnable();
 aec:	0e 94 3e 01 	call	0x27c	; 0x27c <INT0_voidEnable>
	INT0_voidCallBack(&ISR_Pedestrian);
 af0:	85 e2       	ldi	r24, 0x25	; 37
 af2:	96 e0       	ldi	r25, 0x06	; 6
 af4:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <INT0_voidCallBack>

	/*Traffic Light LEDS*/
	DIO_voidSetDirectionPin(DIO_PORTA,PIN1,OUTPUT);
 af8:	80 e0       	ldi	r24, 0x00	; 0
 afa:	61 e0       	ldi	r22, 0x01	; 1
 afc:	41 e0       	ldi	r20, 0x01	; 1
 afe:	0e 94 99 01 	call	0x332	; 0x332 <DIO_voidSetDirectionPin>
	DIO_voidSetDirectionPin(DIO_PORTA,PIN0,OUTPUT);
 b02:	80 e0       	ldi	r24, 0x00	; 0
 b04:	60 e0       	ldi	r22, 0x00	; 0
 b06:	41 e0       	ldi	r20, 0x01	; 1
 b08:	0e 94 99 01 	call	0x332	; 0x332 <DIO_voidSetDirectionPin>
	DIO_voidSetDirectionPin(DIO_PORTA,PIN2,OUTPUT);
 b0c:	80 e0       	ldi	r24, 0x00	; 0
 b0e:	62 e0       	ldi	r22, 0x02	; 2
 b10:	41 e0       	ldi	r20, 0x01	; 1
 b12:	0e 94 99 01 	call	0x332	; 0x332 <DIO_voidSetDirectionPin>
	DIO_voidSetDirectionPin(DIO_PORTC,PIN0,OUTPUT);
 b16:	82 e0       	ldi	r24, 0x02	; 2
 b18:	60 e0       	ldi	r22, 0x00	; 0
 b1a:	41 e0       	ldi	r20, 0x01	; 1
 b1c:	0e 94 99 01 	call	0x332	; 0x332 <DIO_voidSetDirectionPin>
	DIO_voidSetDirectionPin(DIO_PORTC,PIN1,OUTPUT);
 b20:	82 e0       	ldi	r24, 0x02	; 2
 b22:	61 e0       	ldi	r22, 0x01	; 1
 b24:	41 e0       	ldi	r20, 0x01	; 1
 b26:	0e 94 99 01 	call	0x332	; 0x332 <DIO_voidSetDirectionPin>
	DIO_voidSetDirectionPin(DIO_PORTC,PIN2,OUTPUT);
 b2a:	82 e0       	ldi	r24, 0x02	; 2
 b2c:	62 e0       	ldi	r22, 0x02	; 2
 b2e:	41 e0       	ldi	r20, 0x01	; 1
 b30:	0e 94 99 01 	call	0x332	; 0x332 <DIO_voidSetDirectionPin>

	/*pedestrian Button*/
	DIO_voidSetDirectionPin(DIO_PORTD,PIN2,INPUT);
 b34:	83 e0       	ldi	r24, 0x03	; 3
 b36:	62 e0       	ldi	r22, 0x02	; 2
 b38:	40 e0       	ldi	r20, 0x00	; 0
 b3a:	0e 94 99 01 	call	0x332	; 0x332 <DIO_voidSetDirectionPin>
	DIO_voidPullUPPin(DIO_PORTD,PIN2);
 b3e:	83 e0       	ldi	r24, 0x03	; 3
 b40:	62 e0       	ldi	r22, 0x02	; 2
 b42:	0e 94 99 03 	call	0x732	; 0x732 <DIO_voidPullUPPin>

	/*pedestrian Red LED*/
	DIO_voidSetvaluePin(DIO_PORTC,PIN0,HIGH);
 b46:	82 e0       	ldi	r24, 0x02	; 2
 b48:	60 e0       	ldi	r22, 0x00	; 0
 b4a:	41 e0       	ldi	r20, 0x01	; 1
 b4c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>

}
 b50:	cf 91       	pop	r28
 b52:	df 91       	pop	r29
 b54:	08 95       	ret

00000b56 <AppStart>:

void AppStart(void)
{
 b56:	df 93       	push	r29
 b58:	cf 93       	push	r28
 b5a:	00 d0       	rcall	.+0      	; 0xb5c <AppStart+0x6>
 b5c:	cd b7       	in	r28, 0x3d	; 61
 b5e:	de b7       	in	r29, 0x3e	; 62
	STATE=0;
 b60:	10 92 62 00 	sts	0x0062, r1
	/* Car Red LED */
	Flag = STATE_ONE;
 b64:	81 e0       	ldi	r24, 0x01	; 1
 b66:	80 93 63 00 	sts	0x0063, r24
	DIO_voidSetvaluePin(DIO_PORTA,PIN0,HIGH);
 b6a:	80 e0       	ldi	r24, 0x00	; 0
 b6c:	60 e0       	ldi	r22, 0x00	; 0
 b6e:	41 e0       	ldi	r20, 0x01	; 1
 b70:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
	Timer_voidDelayms(5000);
 b74:	68 e8       	ldi	r22, 0x88	; 136
 b76:	73 e1       	ldi	r23, 0x13	; 19
 b78:	80 e0       	ldi	r24, 0x00	; 0
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
	DIO_voidSetvaluePin(DIO_PORTA,PIN0,LOW);
 b80:	80 e0       	ldi	r24, 0x00	; 0
 b82:	60 e0       	ldi	r22, 0x00	; 0
 b84:	40 e0       	ldi	r20, 0x00	; 0
 b86:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>


	/*Car Yellow LED */
	for (u8 Counter=0;Counter<10;Counter++)
 b8a:	1a 82       	std	Y+2, r1	; 0x02
 b8c:	19 c0       	rjmp	.+50     	; 0xbc0 <AppStart+0x6a>
	{
		Flag = STATE_THREE;
 b8e:	83 e0       	ldi	r24, 0x03	; 3
 b90:	80 93 63 00 	sts	0x0063, r24
		Toggle_Bit(STATE,0);
 b94:	90 91 62 00 	lds	r25, 0x0062
 b98:	81 e0       	ldi	r24, 0x01	; 1
 b9a:	89 27       	eor	r24, r25
 b9c:	80 93 62 00 	sts	0x0062, r24
		DIO_voidSetvaluePin(DIO_PORTA,PIN1,STATE);
 ba0:	90 91 62 00 	lds	r25, 0x0062
 ba4:	80 e0       	ldi	r24, 0x00	; 0
 ba6:	61 e0       	ldi	r22, 0x01	; 1
 ba8:	49 2f       	mov	r20, r25
 baa:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
		Timer_voidDelayms(500);
 bae:	64 ef       	ldi	r22, 0xF4	; 244
 bb0:	71 e0       	ldi	r23, 0x01	; 1
 bb2:	80 e0       	ldi	r24, 0x00	; 0
 bb4:	90 e0       	ldi	r25, 0x00	; 0
 bb6:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
	Timer_voidDelayms(5000);
	DIO_voidSetvaluePin(DIO_PORTA,PIN0,LOW);


	/*Car Yellow LED */
	for (u8 Counter=0;Counter<10;Counter++)
 bba:	8a 81       	ldd	r24, Y+2	; 0x02
 bbc:	8f 5f       	subi	r24, 0xFF	; 255
 bbe:	8a 83       	std	Y+2, r24	; 0x02
 bc0:	8a 81       	ldd	r24, Y+2	; 0x02
 bc2:	8a 30       	cpi	r24, 0x0A	; 10
 bc4:	20 f3       	brcs	.-56     	; 0xb8e <AppStart+0x38>
		Flag = STATE_THREE;
		Toggle_Bit(STATE,0);
		DIO_voidSetvaluePin(DIO_PORTA,PIN1,STATE);
		Timer_voidDelayms(500);
	}
	DIO_voidSetvaluePin(DIO_PORTA,PIN1,LOW);
 bc6:	80 e0       	ldi	r24, 0x00	; 0
 bc8:	61 e0       	ldi	r22, 0x01	; 1
 bca:	40 e0       	ldi	r20, 0x00	; 0
 bcc:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
	STATE=0;
 bd0:	10 92 62 00 	sts	0x0062, r1

	/*Car Green LED*/
	Flag = STATE_TWO;
 bd4:	82 e0       	ldi	r24, 0x02	; 2
 bd6:	80 93 63 00 	sts	0x0063, r24
	DIO_voidSetvaluePin(DIO_PORTA,PIN2,HIGH);
 bda:	80 e0       	ldi	r24, 0x00	; 0
 bdc:	62 e0       	ldi	r22, 0x02	; 2
 bde:	41 e0       	ldi	r20, 0x01	; 1
 be0:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
	Timer_voidDelayms(5000);
 be4:	68 e8       	ldi	r22, 0x88	; 136
 be6:	73 e1       	ldi	r23, 0x13	; 19
 be8:	80 e0       	ldi	r24, 0x00	; 0
 bea:	90 e0       	ldi	r25, 0x00	; 0
 bec:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
	DIO_voidSetvaluePin(DIO_PORTA,PIN2,LOW);
 bf0:	80 e0       	ldi	r24, 0x00	; 0
 bf2:	62 e0       	ldi	r22, 0x02	; 2
 bf4:	40 e0       	ldi	r20, 0x00	; 0
 bf6:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>

	/*Car Yellow LED */
	for (u8 Counter=0;Counter<10;Counter++)
 bfa:	19 82       	std	Y+1, r1	; 0x01
 bfc:	19 c0       	rjmp	.+50     	; 0xc30 <AppStart+0xda>
	{
		Flag = STATE_THREE;
 bfe:	83 e0       	ldi	r24, 0x03	; 3
 c00:	80 93 63 00 	sts	0x0063, r24
		Toggle_Bit(STATE,0);
 c04:	90 91 62 00 	lds	r25, 0x0062
 c08:	81 e0       	ldi	r24, 0x01	; 1
 c0a:	89 27       	eor	r24, r25
 c0c:	80 93 62 00 	sts	0x0062, r24
		DIO_voidSetvaluePin(DIO_PORTA,PIN1,STATE);
 c10:	90 91 62 00 	lds	r25, 0x0062
 c14:	80 e0       	ldi	r24, 0x00	; 0
 c16:	61 e0       	ldi	r22, 0x01	; 1
 c18:	49 2f       	mov	r20, r25
 c1a:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
		Timer_voidDelayms(500);
 c1e:	64 ef       	ldi	r22, 0xF4	; 244
 c20:	71 e0       	ldi	r23, 0x01	; 1
 c22:	80 e0       	ldi	r24, 0x00	; 0
 c24:	90 e0       	ldi	r25, 0x00	; 0
 c26:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
	DIO_voidSetvaluePin(DIO_PORTA,PIN2,HIGH);
	Timer_voidDelayms(5000);
	DIO_voidSetvaluePin(DIO_PORTA,PIN2,LOW);

	/*Car Yellow LED */
	for (u8 Counter=0;Counter<10;Counter++)
 c2a:	89 81       	ldd	r24, Y+1	; 0x01
 c2c:	8f 5f       	subi	r24, 0xFF	; 255
 c2e:	89 83       	std	Y+1, r24	; 0x01
 c30:	89 81       	ldd	r24, Y+1	; 0x01
 c32:	8a 30       	cpi	r24, 0x0A	; 10
 c34:	20 f3       	brcs	.-56     	; 0xbfe <AppStart+0xa8>
		Flag = STATE_THREE;
		Toggle_Bit(STATE,0);
		DIO_voidSetvaluePin(DIO_PORTA,PIN1,STATE);
		Timer_voidDelayms(500);
	}
	DIO_voidSetvaluePin(DIO_PORTA,PIN1,LOW);
 c36:	80 e0       	ldi	r24, 0x00	; 0
 c38:	61 e0       	ldi	r22, 0x01	; 1
 c3a:	40 e0       	ldi	r20, 0x00	; 0
 c3c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
}
 c40:	0f 90       	pop	r0
 c42:	0f 90       	pop	r0
 c44:	cf 91       	pop	r28
 c46:	df 91       	pop	r29
 c48:	08 95       	ret

00000c4a <ISR_Pedestrian>:

void ISR_Pedestrian (void)
{
 c4a:	df 93       	push	r29
 c4c:	cf 93       	push	r28
 c4e:	00 d0       	rcall	.+0      	; 0xc50 <ISR_Pedestrian+0x6>
 c50:	cd b7       	in	r28, 0x3d	; 61
 c52:	de b7       	in	r29, 0x3e	; 62
	INT0_voidDisable();
 c54:	0e 94 4c 01 	call	0x298	; 0x298 <INT0_voidDisable>
	switch (Flag)
 c58:	80 91 63 00 	lds	r24, 0x0063
 c5c:	88 2f       	mov	r24, r24
 c5e:	90 e0       	ldi	r25, 0x00	; 0
 c60:	81 30       	cpi	r24, 0x01	; 1
 c62:	91 05       	cpc	r25, r1
 c64:	89 f4       	brne	.+34     	; 0xc88 <ISR_Pedestrian+0x3e>
	{
	case STATE_ONE:
		DIO_voidSetvaluePin(DIO_PORTC,PIN0,LOW);
 c66:	82 e0       	ldi	r24, 0x02	; 2
 c68:	60 e0       	ldi	r22, 0x00	; 0
 c6a:	40 e0       	ldi	r20, 0x00	; 0
 c6c:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
		DIO_voidSetvaluePin(DIO_PORTC,PIN2,HIGH);
 c70:	82 e0       	ldi	r24, 0x02	; 2
 c72:	62 e0       	ldi	r22, 0x02	; 2
 c74:	41 e0       	ldi	r20, 0x01	; 1
 c76:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
		Timer_voidDelayms(5000);
 c7a:	68 e8       	ldi	r22, 0x88	; 136
 c7c:	73 e1       	ldi	r23, 0x13	; 19
 c7e:	80 e0       	ldi	r24, 0x00	; 0
 c80:	90 e0       	ldi	r25, 0x00	; 0
 c82:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
 c86:	48 c0       	rjmp	.+144    	; 0xd18 <ISR_Pedestrian+0xce>
		break;

		default:
			DIO_voidSetvaluePin(DIO_PORTC,PIN0,HIGH); // PED RED ON
 c88:	82 e0       	ldi	r24, 0x02	; 2
 c8a:	60 e0       	ldi	r22, 0x00	; 0
 c8c:	41 e0       	ldi	r20, 0x01	; 1
 c8e:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			DIO_voidSetvaluePin(DIO_PORTA,PIN2,LOW);  // CAR GREEN OFF
 c92:	80 e0       	ldi	r24, 0x00	; 0
 c94:	62 e0       	ldi	r22, 0x02	; 2
 c96:	40 e0       	ldi	r20, 0x00	; 0
 c98:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			STATE=0;
 c9c:	10 92 62 00 	sts	0x0062, r1
			/*Car and pedestrian Yellow LED */
			for (u8 Counter=0;Counter<10;Counter++)
 ca0:	1a 82       	std	Y+2, r1	; 0x02
 ca2:	1d c0       	rjmp	.+58     	; 0xcde <ISR_Pedestrian+0x94>
			{
				Toggle_Bit(STATE,0);
 ca4:	90 91 62 00 	lds	r25, 0x0062
 ca8:	81 e0       	ldi	r24, 0x01	; 1
 caa:	89 27       	eor	r24, r25
 cac:	80 93 62 00 	sts	0x0062, r24
				DIO_voidSetvaluePin(DIO_PORTA,PIN1,STATE);
 cb0:	90 91 62 00 	lds	r25, 0x0062
 cb4:	80 e0       	ldi	r24, 0x00	; 0
 cb6:	61 e0       	ldi	r22, 0x01	; 1
 cb8:	49 2f       	mov	r20, r25
 cba:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
				DIO_voidSetvaluePin(DIO_PORTC,PIN1,STATE);
 cbe:	90 91 62 00 	lds	r25, 0x0062
 cc2:	82 e0       	ldi	r24, 0x02	; 2
 cc4:	61 e0       	ldi	r22, 0x01	; 1
 cc6:	49 2f       	mov	r20, r25
 cc8:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
				Timer_voidDelayms(500);
 ccc:	64 ef       	ldi	r22, 0xF4	; 244
 cce:	71 e0       	ldi	r23, 0x01	; 1
 cd0:	80 e0       	ldi	r24, 0x00	; 0
 cd2:	90 e0       	ldi	r25, 0x00	; 0
 cd4:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
		default:
			DIO_voidSetvaluePin(DIO_PORTC,PIN0,HIGH); // PED RED ON
			DIO_voidSetvaluePin(DIO_PORTA,PIN2,LOW);  // CAR GREEN OFF
			STATE=0;
			/*Car and pedestrian Yellow LED */
			for (u8 Counter=0;Counter<10;Counter++)
 cd8:	8a 81       	ldd	r24, Y+2	; 0x02
 cda:	8f 5f       	subi	r24, 0xFF	; 255
 cdc:	8a 83       	std	Y+2, r24	; 0x02
 cde:	8a 81       	ldd	r24, Y+2	; 0x02
 ce0:	8a 30       	cpi	r24, 0x0A	; 10
 ce2:	00 f3       	brcs	.-64     	; 0xca4 <ISR_Pedestrian+0x5a>
				Toggle_Bit(STATE,0);
				DIO_voidSetvaluePin(DIO_PORTA,PIN1,STATE);
				DIO_voidSetvaluePin(DIO_PORTC,PIN1,STATE);
				Timer_voidDelayms(500);
			}
			DIO_voidSetvaluePin(DIO_PORTC,PIN0,LOW);
 ce4:	82 e0       	ldi	r24, 0x02	; 2
 ce6:	60 e0       	ldi	r22, 0x00	; 0
 ce8:	40 e0       	ldi	r20, 0x00	; 0
 cea:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			DIO_voidSetvaluePin(DIO_PORTA,PIN0,HIGH);
 cee:	80 e0       	ldi	r24, 0x00	; 0
 cf0:	60 e0       	ldi	r22, 0x00	; 0
 cf2:	41 e0       	ldi	r20, 0x01	; 1
 cf4:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			DIO_voidSetvaluePin(DIO_PORTC,PIN2,HIGH);
 cf8:	82 e0       	ldi	r24, 0x02	; 2
 cfa:	62 e0       	ldi	r22, 0x02	; 2
 cfc:	41 e0       	ldi	r20, 0x01	; 1
 cfe:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			Timer_voidDelayms(5000);
 d02:	68 e8       	ldi	r22, 0x88	; 136
 d04:	73 e1       	ldi	r23, 0x13	; 19
 d06:	80 e0       	ldi	r24, 0x00	; 0
 d08:	90 e0       	ldi	r25, 0x00	; 0
 d0a:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
			DIO_voidSetvaluePin(DIO_PORTA,PIN0,LOW);
 d0e:	80 e0       	ldi	r24, 0x00	; 0
 d10:	60 e0       	ldi	r22, 0x00	; 0
 d12:	40 e0       	ldi	r20, 0x00	; 0
 d14:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
			break;
		}
	DIO_voidSetvaluePin(DIO_PORTA,PIN0,LOW);
 d18:	80 e0       	ldi	r24, 0x00	; 0
 d1a:	60 e0       	ldi	r22, 0x00	; 0
 d1c:	40 e0       	ldi	r20, 0x00	; 0
 d1e:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
	STATE=0;
 d22:	10 92 62 00 	sts	0x0062, r1
	/*Car and pedestrian Yellow LED */
	for (u8 Counter=0;Counter<10;Counter++)
 d26:	19 82       	std	Y+1, r1	; 0x01
 d28:	1d c0       	rjmp	.+58     	; 0xd64 <ISR_Pedestrian+0x11a>
	{
		Toggle_Bit(STATE,0);
 d2a:	90 91 62 00 	lds	r25, 0x0062
 d2e:	81 e0       	ldi	r24, 0x01	; 1
 d30:	89 27       	eor	r24, r25
 d32:	80 93 62 00 	sts	0x0062, r24
		DIO_voidSetvaluePin(DIO_PORTA,PIN1,STATE);
 d36:	90 91 62 00 	lds	r25, 0x0062
 d3a:	80 e0       	ldi	r24, 0x00	; 0
 d3c:	61 e0       	ldi	r22, 0x01	; 1
 d3e:	49 2f       	mov	r20, r25
 d40:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
		DIO_voidSetvaluePin(DIO_PORTC,PIN1,STATE);
 d44:	90 91 62 00 	lds	r25, 0x0062
 d48:	82 e0       	ldi	r24, 0x02	; 2
 d4a:	61 e0       	ldi	r22, 0x01	; 1
 d4c:	49 2f       	mov	r20, r25
 d4e:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
		Timer_voidDelayms(500);
 d52:	64 ef       	ldi	r22, 0xF4	; 244
 d54:	71 e0       	ldi	r23, 0x01	; 1
 d56:	80 e0       	ldi	r24, 0x00	; 0
 d58:	90 e0       	ldi	r25, 0x00	; 0
 d5a:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
			break;
		}
	DIO_voidSetvaluePin(DIO_PORTA,PIN0,LOW);
	STATE=0;
	/*Car and pedestrian Yellow LED */
	for (u8 Counter=0;Counter<10;Counter++)
 d5e:	89 81       	ldd	r24, Y+1	; 0x01
 d60:	8f 5f       	subi	r24, 0xFF	; 255
 d62:	89 83       	std	Y+1, r24	; 0x01
 d64:	89 81       	ldd	r24, Y+1	; 0x01
 d66:	8a 30       	cpi	r24, 0x0A	; 10
 d68:	00 f3       	brcs	.-64     	; 0xd2a <ISR_Pedestrian+0xe0>
		Toggle_Bit(STATE,0);
		DIO_voidSetvaluePin(DIO_PORTA,PIN1,STATE);
		DIO_voidSetvaluePin(DIO_PORTC,PIN1,STATE);
		Timer_voidDelayms(500);
	}
	DIO_voidSetvaluePin(DIO_PORTC,PIN2,LOW);
 d6a:	82 e0       	ldi	r24, 0x02	; 2
 d6c:	62 e0       	ldi	r22, 0x02	; 2
 d6e:	40 e0       	ldi	r20, 0x00	; 0
 d70:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
	DIO_voidSetvaluePin(DIO_PORTA,PIN2,HIGH);
 d74:	80 e0       	ldi	r24, 0x00	; 0
 d76:	62 e0       	ldi	r22, 0x02	; 2
 d78:	41 e0       	ldi	r20, 0x01	; 1
 d7a:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
	DIO_voidSetvaluePin(DIO_PORTC,PIN0,HIGH);
 d7e:	82 e0       	ldi	r24, 0x02	; 2
 d80:	60 e0       	ldi	r22, 0x00	; 0
 d82:	41 e0       	ldi	r20, 0x01	; 1
 d84:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
	Timer_voidDelayms(5000);
 d88:	68 e8       	ldi	r22, 0x88	; 136
 d8a:	73 e1       	ldi	r23, 0x13	; 19
 d8c:	80 e0       	ldi	r24, 0x00	; 0
 d8e:	90 e0       	ldi	r25, 0x00	; 0
 d90:	0e 94 9d 00 	call	0x13a	; 0x13a <Timer_voidDelayms>
	DIO_voidSetvaluePin(DIO_PORTA,PIN2,LOW);
 d94:	80 e0       	ldi	r24, 0x00	; 0
 d96:	62 e0       	ldi	r22, 0x02	; 2
 d98:	40 e0       	ldi	r20, 0x00	; 0
 d9a:	0e 94 99 02 	call	0x532	; 0x532 <DIO_voidSetvaluePin>
	INT0_voidEnable();
 d9e:	0e 94 3e 01 	call	0x27c	; 0x27c <INT0_voidEnable>
}
 da2:	0f 90       	pop	r0
 da4:	0f 90       	pop	r0
 da6:	cf 91       	pop	r28
 da8:	df 91       	pop	r29
 daa:	08 95       	ret

00000dac <_exit>:
 dac:	f8 94       	cli

00000dae <__stop_program>:
 dae:	ff cf       	rjmp	.-2      	; 0xdae <__stop_program>
